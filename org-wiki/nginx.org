#+TITLE: nginx
#+LINK_UP: index.html
#+LINK_HOME: index.html
#+OPTIONS: H:3 num:t toc:2 \n:nil @:t ::t |:t ^:{} -:t f:t *:t <:t

* cpu绑定
  #+BEGIN_EXAMPLE
    worker_processes     2;
    worker_cpu_affinity 01 10;
  #+END_EXAMPLE

* 配置
** 301重定向
   #+BEGIN_EXAMPLE
     server {
         server_name www.everet.org;

         rewrite ^(.*) http://everet.org$uri permanent;

         location ~* ^/\d+/\d+/.+\.html$ {
         rewrite ^/\d+/\d+/(.+\.html)$ /$1 permanent;
     }

     server {
         server_name www.5txl.com;

         return 301 $scheme://5txl.com$request_uri;
     }
   #+END_EXAMPLE

** cache静态文件
   #+BEGIN_EXAMPLE
     location ~* .(ogg|ogv|svg|svgz|oet|otf|woff|mp4|ttf|css|rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|mp3|bmp|rtf)$ {
         expires 604800;         # one week
         log_not_found off;
         access_log off;
     }
   #+END_EXAMPLE

** expired
   In addition, it is possible to specify a time of the day using the “@” prefix (0.7.9, 0.6.34):

   #+BEGIN_EXAMPLE
     expires @15h30m;
   #+END_EXAMPLE


* 目录浏览
  #+BEGIN_EXAMPLE
    server {
        listen 80 default_server;

        server_name localhost;
        root /home/cedricporter/htdocs;

        location / {
            autoindex on;
            disable_symlinks off;
        }
    }
  #+END_EXAMPLE

* accept
  In ngx_event_accept.c

  #+BEGIN_SRC c
    s = accept(lc->fd, (struct sockaddr *) sa, &socklen);

    if (s == -1)
    {
        err = ngx_socket_errno;

        if (err == NGX_EAGAIN) {
            ngx_log_debug0(NGX_LOG_DEBUG_EVENT, ev->log, err,
                           "accept() not ready");
            return;
        }

        level = NGX_LOG_ALERT;

        if (err == NGX_ECONNABORTED) {
            level = NGX_LOG_ERR;

        } else if (err == NGX_EMFILE || err == NGX_ENFILE) {
            level = NGX_LOG_CRIT;
        }

        ngx_log_error(level, ev->log, err, "accept() failed");

        if (err == NGX_ECONNABORTED) {
            if (ngx_event_flags & NGX_USE_KQUEUE_EVENT) {
                ev->available--;
            }

            if (ev->available) {
                continue;
            }
        }

        if (err == NGX_EMFILE || err == NGX_ENFILE) {
            if (ngx_disable_accept_events((ngx_cycle_t *) ngx_cycle)
                != NGX_OK)
            {
                return;
            }

            if (ngx_use_accept_mutex) {
                if (ngx_accept_mutex_held) {
                    ngx_shmtx_unlock(&ngx_accept_mutex);
                    ngx_accept_mutex_held = 0;
                }

                ngx_accept_disabled = 1;

            } else {
                ngx_add_timer(ev, ecf->accept_mutex_delay);
            }
        }

        return;
    }
  #+END_SRC

* compile
** modules
   #+BEGIN_SRC sh
     wget http://labs.frickle.com/files/ngx_cache_purge-2.3.tar.gz
     git clone https://github.com/yaoweibin/ngx_http_substitutions_filter_module.git
     wget https://github.com/openresty/echo-nginx-module/archive/v0.57.tar.gz

   #+END_SRC

** do
   #+BEGIN_SRC sh
     ./configure --with-cc-opt='-g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2' \
     --with-ld-opt='-Wl,-Bsymbolic-functions -Wl,-z,relro' \
     --prefix=/usr/share/nginx \
     --conf-path=/etc/nginx/nginx.conf \
     --http-log-path=/var/log/nginx/access.log \
     --error-log-path=/var/log/nginx/error.log \
     --lock-path=/var/lock/nginx.lock \
     --pid-path=/run/nginx.pid \
     --http-client-body-temp-path=/var/lib/nginx/body \
     --http-fastcgi-temp-path=/var/lib/nginx/fastcgi \
     --http-proxy-temp-path=/var/lib/nginx/proxy \
     --http-scgi-temp-path=/var/lib/nginx/scgi \
     --http-uwsgi-temp-path=/var/lib/nginx/uwsgi \
     --with-debug \
     --with-pcre-jit \
     --with-ipv6 \
     --with-http_ssl_module \
     --with-http_stub_status_module \
     --with-http_realip_module \
     --with-http_addition_module \
     --with-http_gzip_static_module \
     --with-http_sub_module \
     --with-http_xslt_module \
     --with-mail \
     --with-mail_ssl_module \
     --add-module=../ngx_cache_purge-2.3 \
     --add-module=../ngx_http_substitutions_filter_module-master/ \
     --add-module=../echo-nginx-module-0.57


   #+END_SRC
