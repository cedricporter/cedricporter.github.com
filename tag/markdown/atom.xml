<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Markdown | EverET.org]]></title>
  <link href="http://everet.org/tag/markdown/atom.xml" rel="self"/>
  <link href="http://everet.org/"/>
  <updated>2013-01-15T00:20:06+08:00</updated>
  <id>http://everet.org/</id>
  <author>
    <name><![CDATA[Stupid ET]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Screenshot And Image Paste in Emacs When Writing Markdown]]></title>
    <link href="http://everet.org/2012/12/screenshot-and-image-paste-in-emacs-when-writing-markdown.html"/>
    <updated>2012-12-28T03:36:00+08:00</updated>
    <id>http://everet.org/2012/12/screenshot-and-image-paste-in-emacs-when-writing-markdown</id>
    <content type="html"><![CDATA[<p>Octopress首选博客语言是Markdown。于是又是Emacs大显身手的时候了。</p>

<p>在用Markdown写东西的时候，我想最蛋疼的应该就是插入图片了。</p>

<p>正常的插入截图的步骤可能为：</p>

<ol>
  <li>打开截图程序截图</li>
  <li>保存截图到Octopress的制定目录中</li>
  <li>然后在Markdown中写上图片的url的地址</li>
</ol>

<p>这样一次两次还可以接受，如果长期这样是在让人受不了。对于我这种懒人，首先就要偷懒，让Emacs帮我们做这些事情。</p>

<h2 id="section">功能演示</h2>

<h3 id="section-1">截图</h3>
<p>我们按下<code>C-c</code> <code>C-s</code> <code>s</code>就开始截图了，截完图后，会自动保存到我们指定的目录，例如我的是<code>~/octopress/source/imgs/</code>。</p>

<p>下面这张图是用Emacs截图自动插入的：
<img src="/imgs/2012-12-28-screenshot-and-image-paste-in-emacs-when-use-markdown.markdown<em>20121228</em>021049_6910Rbg.png">
用起来感觉很爽，按下快捷键，一截图，唰一下就出来一段代码。</p>

<!-- more -->

<h3 id="section-2">插入本地图片</h3>
<p>对于本地硬盘里面的图片的插入，我们可以先在文件浏览器（例如Dolphin）中选中要插入的图片，然后复制图片。回到Emacs中，按下<code>C-c</code> <code>C-s</code> <code>i</code>插入我们的图片。</p>

<p>这里会发生什么事情呢？我很无聊地让Emacs将图片复制到<code>~/octopress/source/imgs/</code>中，然后插入图片在url中地址。</p>

<p>下面是自动插入的图片。
<img class="right" src="/imgs/emacs<em>20121228</em>015008_69103GU.jpg"></p>

<blockquote>
  <p>What Emacs does to your keyboard?<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>
</blockquote>

<h2 id="section-3">实现</h2>
<p>上面都是在介绍功能，现在我们来看一下如何实现。</p>

<table>
  <tbody>
    <tr>
      <td>其实也就是写Emacs Lisp。我自从实习回来就基本没怎么写过代码了，今天难得写一下Lisp，顿时觉得神清气爽啊-_-</td>
      <td> </td>
      <td>。</td>
    </tr>
  </tbody>
</table>

<p>我们可以看到第一张截图，默认插入的图片格式是<code> {% img url %} </code>，这个是Octopress的Tag，可以方便地定制图片的样式。如果需要插入Markdown格式的图片，可以加上前缀<code>C-u</code>，也就是命令变成<code>C-u</code> <code>C-c</code> <code>C-s</code> <code>s</code>这样。这个快捷键绑定略显麻烦，大家可以自己自己绑定到喜欢的快捷键上。</p>

<p>首先我们需要设置Octopress的信息，包括本地的图片路径，以及在网络上的图片路径：</p>

<p><code>cl
(setq octopress-image-dir (expand-file-name "~/octopress/source/imgs/"))
(setq octopress-image-url "/imgs/")
</code></p>

<p>然后开始写程序：</p>

<p>首先是截图，这个直接在网上找到了实现<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>，然后根据需求进行修改：</p>

<p>``` cl 
;; 
(defun my-screenshot (dir_path)
  “Take a screenshot and save it to dir_path path.
Return image filename without path so that you can concat with your
opinion. “
  (interactive)
  (let* ((full-file-name
	  (concat (make-temp-name (concat dir_path (buffer-name) “<em>” (format-time-string “%Y%m%d</em>%H%M%S_”))) “.png”))
	 (file-name (my-base-name full-file-name))
	 )
    (call-process-shell-command “scrot” nil nil nil (concat “-s “ “"” full-file-name “"”))
    file-name
    ))</p>

<p>;; Screenshot
(defun markdown-screenshot (arg)
  “Take a screenshot for Octopress”
  (interactive “P”)
  (let* ((dir_path octopress-image-dir)
	 (url (concat octopress-image-url (my-screenshot dir_path))))
    (if arg
	(insert “<img src="&quot; url" alt="" title=")" />
      (insert “{% img “ url “ %}”))))
;; 	<br />
```</p>

<p>然后是从剪切版Clipboard插入图片，这个找不到，于是只能自己写了哎。Lisp水平太差，写了好久…囧。</p>

<p>``` cl
;; 
;; base on http://emacswiki.org/emacs/CopyAndPaste
(defun get-clipboard-contents-as-string ()
    “Return the value of the clipboard contents as a string.”
    (let ((x-select-enable-clipboard t))
      (or (x-cut-buffer-or-selection-value)
          x-last-selected-text-clipboard)))</p>

<p>(defun copy-file-from-clipboard-to-path (dst-dir)
  “copy file to desired path from clipboard”
  (interactive)
  (let* ((full-file-name) (file-name) (ext) (new-file-name))
    (setq full-file-name (get-clipboard-contents-as-string))
    (if (eq (search “file://” full-file-name) 0)
	(progn
	  (setq full-file-name (substring full-file-name 7))
	  (setq file-name (my-base-name full-file-name))
	  (setq ext (concat “.” (file-name-extension file-name)))
	  (setq new-file-name
		(concat (make-temp-name
			 (concat (substring file-name 0
					    (search “.” file-name :from-end t))
				 (format-time-string “<em>%Y%m%d</em>%H%M%S_”))) ext))
	  (setq new-full-file-name (concat dst-dir new-file-name))
	  (copy-file full-file-name new-full-file-name)
	  new-file-name
	  )
      )))</p>

<p>;; Insert Image From Clip Board
(defun markdown-insert-image-from-clipboard (arg)
  “Insert an image from clipboard and copy it to disired path”
  (interactive “P”)
  (let ((url (concat octopress-image-url (copy-file-from-clipboard-to-path octopress-image-dir))))
    (if arg
	(insert “<img src="&quot; url" alt="" title=")" />
      (insert “{% img “ url “ %}”))))
;; 
```</p>

<p>最后就是设置按键绑定了：</p>

<p><code>cl
(define-key markdown-mode-map (kbd "C-c C-s s") 'markdown-screenshot)
(define-key markdown-mode-map (kbd "C-c C-s i") 'markdown-insert-image-from-clipboard)
</code></p>

<p>所有代码请见以下两个文件：<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup></p>

<ul>
  <li><a href="https://github.com/cedricporter/vim-emacs-setting/blob/master/emacs/.emacs.d/plugins/configs/my-functions.el">my-functions.el</a></li>
  <li><a href="https://github.com/cedricporter/vim-emacs-setting/blob/master/emacs/.emacs.d/plugins/configs/my-octopress-settings.el">my-octopress-settings.el</a></li>
</ul>

<h2 id="section-4">终</h2>
<p>经过九九八十一式终于打完收工，现在又凌晨3点多了。想起我们的<a href="http://huajun.w18.net/">冯华君</a>师兄，31岁就收到乔布斯的Offer Letter去找教主了，我不禁心里怕怕的，还是早点休息吧。身体是革命的本钱啊。</p>

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p><a href="http://jbarillari.blogspot.com/2010/07/what-emacs-does-to-your-keyboard.html">http://jbarillari.blogspot.com/2010/07/what-emacs-does-to-your-keyboard.html</a><a href="#fnref:1" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:2">
      <p><a href="http://lists.gnu.org/archive/html/emacs-orgmode/2011-07/msg01292.html">http://lists.gnu.org/archive/html/emacs-orgmode/2011-07/msg01292.html</a> <a href="http://dreamrunner.org/wiki/public_html/Emacs/org-mode.html">http://dreamrunner.org/wiki/public_html/Emacs/org-mode.html</a><a href="#fnref:2" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:3">
      <p><a href="https://github.com/cedricporter/vim-emacs-setting">我的Emacs配置文件</a><a href="#fnref:3" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
</feed>
