<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Git | EverET.org]]></title>
  <link href="http://everet.org/tag/git/atom.xml" rel="self"/>
  <link href="http://everet.org/"/>
  <updated>2012-12-27T02:45:08+08:00</updated>
  <id>http://everet.org/</id>
  <author>
    <name><![CDATA[Stupid ET]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[From Wordpress to Octopress]]></title>
    <link href="http://everet.org/2012/12/migrate-from-wordpress-to-octopress.html"/>
    <updated>2012-12-25T20:49:00+08:00</updated>
    <id>http://everet.org/2012/12/migrate-from-wordpress-to-octopress</id>
    <content type="html"><![CDATA[<h2 id="section">为什么</h2>
<p>为什么离开Wordpress选择Octopress？ 在Google中搜索Wordpress+Octopress就会找到整版整版的从Wordpress迁移到Octopress的博文，
其中有介绍各种迁移的理由，例如Wordpress太臃肿，Octopress可以让我们像黑客一样写博客。</p>

<p>这些都太高雅了，我只是不喜欢PHP那一坨一坨文明用语一样的代码，这样改起来的时候实在是让人蛋疼。而Octopress是Ruby写的，于是可以借机学习一下<em>Ruby</em>（<strong>这个是主要原因</strong>）。</p>

<!-- more -->

<h2 id="wordpress">对于Wordpress的看法</h2>
<p>Wordpress可以让我们在浏览器写东西，也可以用客户端来写，例如Windows Live Writer、Emacs + org2blog<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>。
当我们在其他人电脑，没有客户端的时候，一样可以打开浏览器写。Wordpress既可以是胖客户端，又可以是瘦客户端。
而且Wordpress架构设计灵活，插件主题丰富。用户体验好，也可以用Markdown、org等等其他语言来写。对于静态化，装个WP-Super-Cache插件就可以将所有文章静态化了，而且静态化的程度是可以控制的。</p>

<h3 id="section-1">缺点</h3>
<ol>
  <li>是PHP写的，用MySQL，这两个东西一下就占了一堆内存。对于我们这些穷苦人民的VPS十分不友好。</li>
  <li>不联网就没法预览最终效果。</li>
</ol>

<h2 id="octopress">对于Octopress的看法</h2>
<p>对于Octopress的优点网上也有一堆一堆的评论，我也就不太多说了。我们来看看我觉得的缺点：</p>

<h3 id="section-2">缺点</h3>
<ol>
  <li>Octopress是一个胖客户端的博客系统，在写博客前，你需要安装Git、Ruby等等东西，然后把环境调教好，才能开始写东西。</li>
  <li>如果去到别人的电脑，或者是Windows的话，那么写个博客都会非常的蛋疼。</li>
  <li>相对缺乏插件与主题。</li>
  <li>发布一篇文章就要重建整个博客，慢。</li>
</ol>

<h3 id="section-3">优点</h3>
<blockquote>
  <p>Octopress is jekyll with Batteries included.</p>
</blockquote>

<p>直接就是用Markdown语法，不用纠结org还是markdown。
可以方便地离线预览文章<code>rake preview</code>。</p>

<h3 id="misc">Misc</h3>
<p>Octopress默认的markdown引擎是rdiscount，这个实在是让人难以接受，连footnote都不支持。于是果断换成了kramdown<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>。kramdown支持footnote，甚至LaTex<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>。</p>

<h2 id="section-4">其他</h2>

<h3 id="section-5">写博客的三个阶段</h3>
<p>之前看过阮一峰写的一篇文章<a href="http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html">github Pages和Jekyll入门</a>，里面有讲到，喜欢写博客的人，会经历三个阶段：</p>

<blockquote>
  <p>第一阶段，刚接触Blog，觉得很新鲜，试着选择一个免费空间来写。
第二阶段，发现免费空间限制太多，就自己购买域名和空间，搭建独立博客。
第三阶段，觉得独立博客的管理太麻烦，最好在保留控制权的前提下，让别人来管，自己只负责写文章。</p>
</blockquote>

<p>好吧，我觉得独立博客的管理确实挺麻烦的，加上刚刚经历买了1年的VPS没到一个月，主机商就跑路的悲剧后，就愈发觉得自己负责可靠性等各种东西的维护确实挺麻烦的。就先暂时放在Github上面，日后再自己管理。</p>

<p>放在Github上面有个坏处是，对于页面都有缓存：<code>Cache-Control: max-age=86400</code>，也就是有一整天缓存时间，如果一天内有访问过这个页面的浏览器不刷新的话就直接从cache里面取了。不过应该也没什么大碍，基本不会一天更新好几次。而且除了自己也没什么人访问。</p>

<h3 id="emacs">Emacs</h3>
<p>Emacs既可以方便地写Wordpress也可以写Octopress。
<img src="/imgs/emacs-user-at-work.jpg" alt="Emacs User At Work" /><sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup></p>

<h3 id="ruby">Ruby</h3>
<p>这段时间看了Ruby，发现竟然可以比Python更加优美，我想，日后，可能也会有很多人从Python流向Ruby，就像曾经人们从Perl流向Python一样。</p>

<p>这就是江山代有才人出，长江后浪推前浪啊。事物总是在进步着。</p>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p><a href="https://github.com/punchagan/org2blog">https://github.com/punchagan/org2blog</a><a href="#fnref:1" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:2">
      <p><a href="http://kramdown.rubyforge.org/index.html">http://kramdown.rubyforge.org/index.html</a><a href="#fnref:2" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:3">
      <p><a href="http://yanping.me/cn/blog/2012/03/10/octopress-with-latex/">在Octopress中使用LaTeX</a><a href="#fnref:3" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:4">
      <p><a href="http://batsov.com/articles/2011/11/11/blogging-like-a-hacker-evolution/">http://batsov.com/articles/2011/11/11/blogging-like-a-hacker-evolution/</a><a href="#fnref:4" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[服务器迁移告一段落]]></title>
    <link href="http://everet.org/2012/02/server-migration.html"/>
    <updated>2012-02-10T23:23:41+08:00</updated>
    <id>http://everet.org/2012/02/server-migration</id>
    <content type="html"><![CDATA[Liquid error: undefined method `strip!' for nil:NilClass]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用Git访问SVN]]></title>
    <link href="http://everet.org/2012/02/access-svn-with-git.html"/>
    <updated>2012-02-01T03:33:29+08:00</updated>
    <id>http://everet.org/2012/02/access-svn-with-git</id>
    <content type="html"><![CDATA[<p>想必大家都使用过Subversion吧，也想必大家都对SVN这种脱离了网络和服务器就寸步难行的工作方式嗤之以鼻吧。使用SVN我们看个log首要联网。</p>

<p>在服务器在因特网的情况下，网速让使用SVN变成一件十分蛋疼的事情。因为SVN事事都要联网，没有网络就无法工作，这个是集中式版本控制器十分大的缺陷。</p>

<p>好在后来Linus在BitMover在收回开源社区的BitKeeper这款分布式版本控制器的授权后，开发了Git。这款Linus又一力作又再次改变了世界。</p>

<p>Git有个很好的功能就是可以访问SVN服务器。这点也让我们这些SVN的使用者也稍稍改善了SVN的用户体验。</p>

<p>Git可以将版本先提交（commit）到本地的分支，到时机成熟之时再一次推送（push）到远程服务器。而且查看历史也不需要联网了，因为Git默认会把整个SVN版本库都克隆下来。</p>

<p>像我们使用Google Code来托管我们的开源代码时，我们可以在上面创建SVN的版本库，Git版本库貌似访问不了，没办法。</p>

<p>Google Code对一个项目有4GB的空间，有wiki等等，还可以上传文件供用户下载，这个非常的好。</p>

<p>例如，我的vim和emacs的配置我放到了 <a href="http://code.google.com/p/et-vim-setting/">http://code.google.com/p/et-vim-setting/</a></p>

<p>我们可以使用如下命令克隆我们的Google Code上的项目。</p>

<p><code>git svn clone --username cedricporter@gmail.com -s https://et-vim-setting.googlecode.com/svn vim_setting</code></p>

<!-- more -->

<p>我在用如下命令把我的Windows上的配置文件_vimrc提交到Google Code的SVN服务器上。</p>

<p>``` console
Cedric Porter@CedricPorter-PC /cygdrive/h/Coding/vim_setting     <br />
$ git status       <br />
# On branch master      <br />
nothing to commit (working directory clean)</p>

<p>Cedric Porter@CedricPorter-PC /cygdrive/h/Coding/vim_setting     <br />
$ git add .</p>

<p>Cedric Porter@CedricPorter-PC /cygdrive/h/Coding/vim_setting     <br />
$ git status      <br />
# On branch master      <br />
# Changes to be committed:      <br />
# (use “git reset HEAD <file>..." to unstage)        
#        
# new file: _vimrc        
#</file></p>

<p>Cedric Porter@CedricPorter-PC /cygdrive/h/Coding/vim_setting     <br />
$ git commit -am ‘add windows setting’       <br />
[master 6d6f696] add windows setting      <br />
1 files changed, 632 insertions(+), 0 deletions(-)      <br />
create mode 100755 _vimrc</p>

<p>Cedric Porter@CedricPorter-PC /cygdrive/h/Coding/vim_setting     <br />
$ git svn dcommit      <br />
Committing to https://et-vim-setting.googlecode.com/svn/trunk …      <br />
Authentication realm: <a href="https://et-vim-setting.googlecode.com:443">https://et-vim-setting.googlecode.com:443</a> Google Code Subversion Repository      <br />
Password for ‘Cedric Porter’:      <br />
```</p>

<p>更多的Git教程请查看《Pro Git》，在美国的Amazon有卖，电子版地址 <a href="http://progit.org/book/zh/">http://progit.org/book/zh/</a> ，他们的翻译也是使用Git管理。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[给Gitweb加上访问密码，保护我们的私有项目]]></title>
    <link href="http://everet.org/2012/01/gitweb-password.html"/>
    <updated>2012-01-30T00:35:19+08:00</updated>
    <id>http://everet.org/2012/01/gitweb-password</id>
    <content type="html"><![CDATA[<p>Gitweb是Git提供的一个基于web的版本查看工具，可以在网页浏览我们的版本库，挺像Google Code上面的网页浏览版本库。我们可以使用cgi方式，让gitweb运行在apache中，如果在nginx上，我们还需要一个包装才可以运行cgi。</p>

<p>使用Gitweb很方便，但是如果是一些私有的项目，谁都可以访问想必大家都不能接受吧。</p>

<p>所以我们可以通过apache或者nginx给虚拟主机增加一个密码。效果如：<a href="http://git.everet.org/">http://git.everet.org/</a></p>

<p>我们首先用htpasswd生成密码：</p>

<p>```
htpasswd -cb 文件名 帐号 密码</p>

<p>htpasswd -b 其他帐号 密码</p>

<p>-c代表创建一个新的，-b代表批处理。
```</p>

<!-- more -->

<p>我们可以在这里<a href="http://everet.org/wp-content/uploads/2012/01/htpasswd.rar">htpasswd </a>下载htpasswd.py，然后添加可执行权限，改名为htpasswd放到/usr/local/bin下，就可以在任意地方调用了。</p>

<p><code>console
$ chmod +x htpasswd.py
$ cp htpasswd.py /usr/local/bin/htpasswd
</code></p>

<p>然后，我们可以</p>

<p><code>console
root@everet:~# htpasswd -cb gitweb username_et password
root@everet:~# cat gitweb
username_et:kPj.q84Ax1rrc
</code></p>

<p>然后就在当前目录生成了一个gitweb的文件，里面就有帐号和密码，我们将其复制到某个地方，例如/etc/nginx/下。</p>

<p>我们修改我们的配置</p>

<p>``` nginx
# gitweb</p>

<p>server {</p>

<p>listen   80; ## listen for ipv4</p>

<p>server_name  git.everet.org ;</p>

<p>access_log  off;</p>

<p>auth_basic “EverET.org Gitweb Server”;</p>

<p>auth_basic_user_file /etc/nginx/gitweb;</p>

<p>root   /var/www/gitweb;</p>

<p>index   gitweb.cgi ;</p>

<table>
  <tbody>
    <tr>
      <td>location ~ .(cgi</td>
      <td>pl).*$ {</td>
    </tr>
  </tbody>
</table>

<p>gzip off;</p>

<p>fastcgi_pass unix:/var/run/cgiwrap-fcgi/cgiwrap-fcgi.sock;</p>

<p>fastcgi_index index.cgi;</p>

<p>fastcgi_param SCRIPT_FILENAME /var/www/gitweb/gitweb.cgi;</p>

<p>fastcgi_param QUERY_STRING     $query_string;</p>

<p>fastcgi_param REQUEST_METHOD   $request_method;</p>

<p>fastcgi_param CONTENT_TYPE     $content_type;</p>

<p>fastcgi_param CONTENT_LENGTH   $content_length;</p>

<p>fastcgi_param GATEWAY_INTERFACE  CGI/1.1;</p>

<p>fastcgi_param SERVER_SOFTWARE    nginx;</p>

<p>fastcgi_param SCRIPT_NAME        $fastcgi_script_name;</p>

<p>fastcgi_param REQUEST_URI        $request_uri;</p>

<p>fastcgi_param DOCUMENT_URI       $document_uri;</p>

<p>fastcgi_param DOCUMENT_ROOT      /var/www/gitweb;</p>

<p>fastcgi_param SERVER_PROTOCOL    $server_protocol;</p>

<p>fastcgi_param REMOTE_ADDR        $remote_addr;</p>

<p>fastcgi_param REMOTE_PORT        $remote_port;</p>

<p>fastcgi_param SERVER_ADDR        $server_addr;</p>

<p>fastcgi_param SERVER_PORT        $server_port;</p>

<p>fastcgi_param SERVER_NAME        $server_name;</p>

<p>}</p>

<p>}
```</p>

<p>下面附上大牛写的htpasswd。点击这里下载 <a href="http://everet.org/wp-content/uploads/2012/01/htpasswd.rar">htpasswd </a></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>python  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span> <span class="nb">id</span><span class="o">=</span><span class="s">&quot;usrbinpython&quot;</span><span class="o">&gt;</span><span class="err">!</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="err">”</span><span class="s">&quot;”Replacement for htpasswd”””</span>
</span><span class='line'><span class="c"># Original author: Eli Carter&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">random</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">optparse</span> <span class="kn">import</span> <span class="n">OptionParser</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span> <span class="nb">id</span><span class="o">=</span><span class="s">&quot;we-need-a-crypt-module-but-windows-doesnt-have-one-by-default--try-to-find&quot;</span><span class="o">&gt;</span><span class="n">We</span> <span class="n">need</span> <span class="n">a</span> <span class="n">crypt</span> <span class="n">module</span><span class="p">,</span> <span class="n">but</span> <span class="n">Windows</span> <span class="n">doesn</span><span class="err">’</span><span class="n">t</span> <span class="n">have</span> <span class="n">one</span> <span class="n">by</span> <span class="n">default</span><span class="o">.</span>  <span class="n">Try</span> <span class="n">to</span> <span class="n">find</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c"># one, and tell the user if we can’t.</span>
</span><span class='line'><span class="k">try</span><span class="p">:</span>
</span><span class='line'>    <span class="kn">import</span> <span class="nn">crypt</span>
</span><span class='line'><span class="k">except</span> <span class="ne">ImportError</span><span class="p">:</span>
</span><span class='line'>    <span class="k">try</span><span class="p">:</span>
</span><span class='line'>        <span class="kn">import</span> <span class="nn">fcrypt</span> <span class="kn">as</span> <span class="nn">crypt</span>
</span><span class='line'>    <span class="k">except</span> <span class="ne">ImportError</span><span class="p">:</span>
</span><span class='line'>        <span class="n">sys</span><span class="o">.</span><span class="n">stderr</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="err">“</span><span class="n">Cannot</span> <span class="n">find</span> <span class="n">a</span> <span class="n">crypt</span> <span class="n">module</span><span class="o">.</span>  <span class="err">“</span>
</span><span class='line'>                         <span class="err">“</span><span class="n">Possibly</span> <span class="n">http</span><span class="p">:</span><span class="o">//</span><span class="n">carey</span><span class="o">.</span><span class="n">geek</span><span class="o">.</span><span class="n">nz</span><span class="o">/</span><span class="n">code</span><span class="o">/</span><span class="n">python</span><span class="o">-</span><span class="n">fcrypt</span><span class="o">/</span>\<span class="n">n</span><span class="err">”</span><span class="p">)</span>
</span><span class='line'>        <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">salt</span><span class="p">():</span>
</span><span class='line'>    <span class="err">“</span><span class="s">&quot;”Returns a string of 2 randome letters”””</span>
</span><span class='line'>    <span class="n">letters</span> <span class="o">=</span> <span class="err">‘</span><span class="n">abcdefghijklmnopqrstuvwxyz</span><span class="err">’</span> \
</span><span class='line'>              <span class="err">‘</span><span class="n">ABCDEFGHIJKLMNOPQRSTUVWXYZ</span><span class="err">’</span> \
</span><span class='line'>              <span class="err">‘</span><span class="mo">01234567</span><span class="mi">89</span><span class="o">/.</span><span class="err">’</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">random</span><span class="o">.</span><span class="n">choice</span><span class="p">(</span><span class="n">letters</span><span class="p">)</span> <span class="o">+</span> <span class="n">random</span><span class="o">.</span><span class="n">choice</span><span class="p">(</span><span class="n">letters</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">class</span> <span class="nc">HtpasswdFile</span><span class="p">:</span>
</span><span class='line'>    <span class="err">“</span><span class="s">&quot;”A class for manipulating htpasswd files.”””&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">filename</span><span class="p">,</span> <span class="n">create</span><span class="o">=</span><span class="bp">False</span><span class="p">):</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">entries</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">filename</span> <span class="o">=</span> <span class="n">filename</span>
</span><span class='line'>    <span class="k">if</span> <span class="ow">not</span> <span class="n">create</span><span class="p">:</span>
</span><span class='line'>        <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">filename</span><span class="p">):</span>
</span><span class='line'>            <span class="bp">self</span><span class="o">.</span><span class="n">load</span><span class="p">()</span>
</span><span class='line'>        <span class="k">else</span><span class="p">:</span>
</span><span class='line'>            <span class="k">raise</span> <span class="ne">Exception</span><span class="p">(</span><span class="s">&quot;</span><span class="si">%s</span><span class="s"> does not exist&quot;</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">filename</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">load</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>    <span class="sd">&quot;&quot;&quot;Read the htpasswd file into memory.&quot;&quot;&quot;</span>
</span><span class='line'>    <span class="n">lines</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">filename</span><span class="p">,</span> <span class="s">&#39;r&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">readlines</span><span class="p">()</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">entries</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">lines</span><span class="p">:</span>
</span><span class='line'>        <span class="n">username</span><span class="p">,</span> <span class="n">pwhash</span> <span class="o">=</span> <span class="n">line</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s">&#39;:&#39;</span><span class="p">)</span>
</span><span class='line'>        <span class="n">entry</span> <span class="o">=</span> <span class="p">[</span><span class="n">username</span><span class="p">,</span> <span class="n">pwhash</span><span class="o">.</span><span class="n">rstrip</span><span class="p">()]</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">entries</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">entry</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">save</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>    <span class="sd">&quot;&quot;&quot;Write the htpasswd file to disk&quot;&quot;&quot;</span>
</span><span class='line'>    <span class="nb">open</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">filename</span><span class="p">,</span> <span class="s">&#39;w&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">writelines</span><span class="p">([</span><span class="s">&quot;</span><span class="si">%s</span><span class="s">:</span><span class="si">%s</span><span class="se">\n</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="n">entry</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">entry</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
</span><span class='line'>                                         <span class="k">for</span> <span class="n">entry</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">entries</span><span class="p">])</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">update</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">username</span><span class="p">,</span> <span class="n">password</span><span class="p">):</span>
</span><span class='line'>    <span class="sd">&quot;&quot;&quot;Replace the entry for the given user, or add it if new.&quot;&quot;&quot;</span>
</span><span class='line'>    <span class="n">pwhash</span> <span class="o">=</span> <span class="n">crypt</span><span class="o">.</span><span class="n">crypt</span><span class="p">(</span><span class="n">password</span><span class="p">,</span> <span class="n">salt</span><span class="p">())</span>
</span><span class='line'>    <span class="n">matching_entries</span> <span class="o">=</span> <span class="p">[</span><span class="n">entry</span> <span class="k">for</span> <span class="n">entry</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">entries</span>
</span><span class='line'>                        <span class="k">if</span> <span class="n">entry</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="n">username</span><span class="p">]</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">matching_entries</span><span class="p">:</span>
</span><span class='line'>        <span class="n">matching_entries</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">pwhash</span>
</span><span class='line'>    <span class="k">else</span><span class="p">:</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">entries</span><span class="o">.</span><span class="n">append</span><span class="p">([</span><span class="n">username</span><span class="p">,</span> <span class="n">pwhash</span><span class="p">])</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">delete</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">username</span><span class="p">):</span>
</span><span class='line'>    <span class="sd">&quot;&quot;&quot;Remove the entry for the given user.&quot;&quot;&quot;</span>
</span><span class='line'>    <span class="bp">self</span><span class="o">.</span><span class="n">entries</span> <span class="o">=</span> <span class="p">[</span><span class="n">entry</span> <span class="k">for</span> <span class="n">entry</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">entries</span>
</span><span class='line'>                    <span class="k">if</span> <span class="n">entry</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">!=</span> <span class="n">username</span><span class="p">]</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
</span><span class='line'>    <span class="err">“”“</span><span class="o">%</span><span class="n">prog</span> <span class="p">[</span><span class="o">-</span><span class="n">c</span><span class="p">]</span> <span class="o">-</span><span class="n">b</span> <span class="n">filename</span> <span class="n">username</span> <span class="n">password</span>
</span><span class='line'>    <span class="n">Create</span> <span class="ow">or</span> <span class="n">update</span> <span class="n">an</span> <span class="n">htpasswd</span> <span class="nb">file</span><span class="err">”””</span>
</span><span class='line'>    <span class="c"># For now, we only care about the use cases that affect tests/functional.py</span>
</span><span class='line'>    <span class="n">parser</span> <span class="o">=</span> <span class="n">OptionParser</span><span class="p">(</span><span class="n">usage</span><span class="o">=</span><span class="n">main</span><span class="o">.&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="n">doc</span><span class="o">&lt;/</span><span class="n">strong</span><span class="o">&gt;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">parser</span><span class="o">.</span><span class="n">add_option</span><span class="p">(</span><span class="err">‘</span><span class="o">-</span><span class="n">b</span><span class="err">’</span><span class="p">,</span> <span class="n">action</span><span class="o">=</span><span class="err">’</span><span class="n">store_true</span><span class="err">’</span><span class="p">,</span> <span class="n">dest</span><span class="o">=</span><span class="err">’</span><span class="n">batch</span><span class="err">’</span><span class="p">,</span> <span class="n">default</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span>
</span><span class='line'>        <span class="n">help</span><span class="o">=</span><span class="err">’</span><span class="n">Batch</span> <span class="n">mode</span><span class="p">;</span> <span class="n">password</span> <span class="ow">is</span> <span class="n">passed</span> <span class="n">on</span> <span class="n">the</span> <span class="n">command</span> <span class="n">line</span> <span class="n">IN</span> <span class="n">THE</span> <span class="n">CLEAR</span><span class="o">.</span><span class="err">’</span>
</span><span class='line'>        <span class="p">)</span>
</span><span class='line'>    <span class="n">parser</span><span class="o">.</span><span class="n">add_option</span><span class="p">(</span><span class="err">‘</span><span class="o">-</span><span class="n">c</span><span class="err">’</span><span class="p">,</span> <span class="n">action</span><span class="o">=</span><span class="err">’</span><span class="n">store_true</span><span class="err">’</span><span class="p">,</span> <span class="n">dest</span><span class="o">=</span><span class="err">’</span><span class="n">create</span><span class="err">’</span><span class="p">,</span> <span class="n">default</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span>
</span><span class='line'>        <span class="n">help</span><span class="o">=</span><span class="err">’</span><span class="n">Create</span> <span class="n">a</span> <span class="n">new</span> <span class="n">htpasswd</span> <span class="nb">file</span><span class="p">,</span> <span class="n">overwriting</span> <span class="nb">any</span> <span class="n">existing</span> <span class="nb">file</span><span class="o">.</span><span class="err">’</span><span class="p">)</span>
</span><span class='line'>    <span class="n">parser</span><span class="o">.</span><span class="n">add_option</span><span class="p">(</span><span class="err">‘</span><span class="o">-</span><span class="n">D</span><span class="err">’</span><span class="p">,</span> <span class="n">action</span><span class="o">=</span><span class="err">’</span><span class="n">store_true</span><span class="err">’</span><span class="p">,</span> <span class="n">dest</span><span class="o">=</span><span class="err">’</span><span class="n">delete_user</span><span class="err">’</span><span class="p">,</span>
</span><span class='line'>        <span class="n">default</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="err">’</span><span class="n">Remove</span> <span class="n">the</span> <span class="n">given</span> <span class="n">user</span> <span class="kn">from</span> <span class="nn">the</span> <span class="nn">password</span> <span class="nn">file.</span><span class="err">’)&lt;/</span><span class="nn">p</span><span class="err">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">options</span><span class="p">,</span> <span class="n">args</span> <span class="o">=</span> <span class="n">parser</span><span class="o">.</span><span class="n">parse_args</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">syntax_error</span><span class="p">(</span><span class="n">msg</span><span class="p">):</span>
</span><span class='line'>    <span class="sd">&quot;&quot;&quot;Utility function for displaying fatal error messages with usage</span>
</span><span class='line'><span class="sd">    help.</span>
</span><span class='line'><span class="sd">    &quot;&quot;&quot;</span>
</span><span class='line'>    <span class="n">sys</span><span class="o">.</span><span class="n">stderr</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="s">&quot;Syntax error: &quot;</span> <span class="o">+</span> <span class="n">msg</span><span class="p">)</span>
</span><span class='line'>    <span class="n">sys</span><span class="o">.</span><span class="n">stderr</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">parser</span><span class="o">.</span><span class="n">get_usage</span><span class="p">())</span>
</span><span class='line'>    <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="ow">not</span> <span class="n">options</span><span class="o">.</span><span class="n">batch</span><span class="p">:</span>
</span><span class='line'>    <span class="n">syntax_error</span><span class="p">(</span><span class="s">&quot;Only batch mode is supported</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Non-option arguments</span>
</span><span class='line'><span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">args</span><span class="p">)</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="mi">2</span><span class="p">:</span>
</span><span class='line'>    <span class="n">syntax_error</span><span class="p">(</span><span class="s">&quot;Insufficient number of arguments.</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">)</span>
</span><span class='line'><span class="n">filename</span><span class="p">,</span> <span class="n">username</span> <span class="o">=</span> <span class="n">args</span><span class="p">[:</span><span class="mi">2</span><span class="p">]</span>
</span><span class='line'><span class="k">if</span> <span class="n">options</span><span class="o">.</span><span class="n">delete_user</span><span class="p">:</span>
</span><span class='line'>    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">args</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">2</span><span class="p">:</span>
</span><span class='line'>        <span class="n">syntax_error</span><span class="p">(</span><span class="s">&quot;Incorrect number of arguments.</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">password</span> <span class="o">=</span> <span class="bp">None</span>
</span><span class='line'><span class="k">else</span><span class="p">:</span>
</span><span class='line'>    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">args</span><span class="p">)</span> <span class="o">!=</span> <span class="mi">3</span><span class="p">:</span>
</span><span class='line'>        <span class="n">syntax_error</span><span class="p">(</span><span class="s">&quot;Incorrect number of arguments.</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="n">password</span> <span class="o">=</span> <span class="n">args</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">passwdfile</span> <span class="o">=</span> <span class="n">HtpasswdFile</span><span class="p">(</span><span class="n">filename</span><span class="p">,</span> <span class="n">create</span><span class="o">=</span><span class="n">options</span><span class="o">.</span><span class="n">create</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">options</span><span class="o">.</span><span class="n">delete_user</span><span class="p">:</span>
</span><span class='line'>    <span class="n">passwdfile</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="n">username</span><span class="p">)</span>
</span><span class='line'><span class="k">else</span><span class="p">:</span>
</span><span class='line'>    <span class="n">passwdfile</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">username</span><span class="p">,</span> <span class="n">password</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">passwdfile</span><span class="o">.</span><span class="n">save</span><span class="p">()</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">if</span> <span class="o">&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="n">name</span><span class="o">&lt;/</span><span class="n">strong</span><span class="o">&gt;</span> <span class="o">==</span> <span class="err">‘</span><span class="o">&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="n">main</span><span class="o">&lt;/</span><span class="n">strong</span><span class="o">&gt;</span><span class="err">’</span><span class="p">:</span>
</span><span class='line'>    <span class="n">main</span><span class="p">()</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TortoiseGit访问Gitosis搭建的版本库]]></title>
    <link href="http://everet.org/2012/01/tortoisegit-access-gitosis.html"/>
    <updated>2012-01-27T23:30:39+08:00</updated>
    <id>http://everet.org/2012/01/tortoisegit-access-gitosis</id>
    <content type="html"><![CDATA[<p>首先，我们创建好公钥和密钥，如何创建可以参考 <a href="http://everet.org/2012/01/management-remote-host.html">http://everet.org/2012/01/management-remote-host.html</a> 。</p>

<p>然后把公钥id_rsa.pub发给Git版本库的管理员。</p>

<p>因为TortoiseGit使用ppk，所以我们需要用自己密钥重新创建一个ppk的密钥</p>

<p><a href="http://everet.org/wp-content/uploads/2012/01/image6.png"><img src="http://everet.org/wp-content/uploads/2012/01/image_thumb6.png" alt="image" /></a></p>

<p>我们首先打开 TortoiseGit 下的 puttygen，然后点击load，把自己密钥加载进来，我们之前创建的密钥，如果没做任何更改，则文件名为id_rsa。</p>

<!-- more -->

<p><a href="http://everet.org/wp-content/uploads/2012/01/image7.png"><img src="http://everet.org/wp-content/uploads/2012/01/image_thumb7.png" alt="image" /></a></p>

<p>然后选中我们的密钥id_rsa。</p>

<p><a href="http://everet.org/wp-content/uploads/2012/01/image8.png"><img src="http://everet.org/wp-content/uploads/2012/01/image_thumb8.png" alt="image" /></a></p>

<p>然后就有</p>

<p><a href="http://everet.org/wp-content/uploads/2012/01/image9.png"><img src="http://everet.org/wp-content/uploads/2012/01/image_thumb9.png" alt="image" /></a></p>

<p>然后我们保存新的ppk的密钥。</p>

<p><a href="http://everet.org/wp-content/uploads/2012/01/image10.png"><img src="http://everet.org/wp-content/uploads/2012/01/image_thumb10.png" alt="image" /></a></p>

<p>接着，我们装载我们的密钥，我们打开Pageant。</p>

<p><a href="http://everet.org/wp-content/uploads/2012/01/image11.png"><img src="http://everet.org/wp-content/uploads/2012/01/image_thumb11.png" alt="image" /></a></p>

<p>选择 Add Key。</p>

<p><a href="http://everet.org/wp-content/uploads/2012/01/image12.png"><img src="http://everet.org/wp-content/uploads/2012/01/image_thumb12.png" alt="image" /></a></p>

<p>在弹出的浏览框中选择我们刚刚生成的ppk扩展名的密钥。</p>

<p><a href="http://everet.org/wp-content/uploads/2012/01/image13.png"><img src="http://everet.org/wp-content/uploads/2012/01/image_thumb13.png" alt="image" /></a></p>

<p>然后就OK了。</p>

<p><a href="http://everet.org/wp-content/uploads/2012/01/image14.png"><img src="http://everet.org/wp-content/uploads/2012/01/image_thumb14.png" alt="image" /></a></p>

<p>2012年2月26日补充：</p>

<p>Git克隆版本库：</p>

<p><strong>加载密钥：</strong></p>

<p><a href="http://everet.org/wp-content/uploads/2012/01/11.png"><img src="http://everet.org/wp-content/uploads/2012/01/11.png" alt="" /></a></p>

<p><a href="http://everet.org/wp-content/uploads/2012/01/22.png"><img src="http://everet.org/wp-content/uploads/2012/01/22.png" alt="" /></a></p>

<p>OK</p>

<p><a href="http://everet.org/wp-content/uploads/2012/01/33.png"><img src="http://everet.org/wp-content/uploads/2012/01/33.png" alt="" /></a></p>
]]></content>
  </entry>
  
</feed>
