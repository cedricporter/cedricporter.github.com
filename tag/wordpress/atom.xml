<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Wordpress | EverET.org]]></title>
  <link href="http://everet.org/tag/wordpress/atom.xml" rel="self"/>
  <link href="http://everet.org/"/>
  <updated>2012-12-28T03:12:25+08:00</updated>
  <id>http://everet.org/</id>
  <author>
    <name><![CDATA[Stupid ET]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[From Wordpress to Octopress]]></title>
    <link href="http://everet.org/2012/12/migrate-from-wordpress-to-octopress.html"/>
    <updated>2012-12-25T20:49:00+08:00</updated>
    <id>http://everet.org/2012/12/migrate-from-wordpress-to-octopress</id>
    <content type="html"><![CDATA[<h2 id="section">为什么</h2>
<p>为什么离开Wordpress选择Octopress？ 在Google中搜索Wordpress+Octopress就会找到整版整版的从Wordpress迁移到Octopress的博文，
其中有介绍各种迁移的理由，例如Wordpress太臃肿，Octopress可以让我们像黑客一样写博客。</p>

<p>这些都太高雅了，我只是不喜欢PHP那一坨一坨文明用语一样的代码，这样改起来的时候实在是让人蛋疼。而Octopress是Ruby写的，于是可以借机学习一下<em>Ruby</em>（<strong>这个是主要原因</strong>）。</p>

<!-- more -->

<h2 id="wordpress">对于Wordpress的看法</h2>
<p>Wordpress可以让我们在浏览器写东西，也可以用客户端来写，例如Windows Live Writer、Emacs + org2blog<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup>。
当我们在其他人电脑，没有客户端的时候，一样可以打开浏览器写。Wordpress既可以是胖客户端，又可以是瘦客户端。
而且Wordpress架构设计灵活，插件主题丰富。用户体验好，也可以用Markdown、org等等其他语言来写。对于静态化，装个WP-Super-Cache插件就可以将所有文章静态化了，而且静态化的程度是可以控制的。</p>

<h3 id="section-1">缺点</h3>
<ol>
  <li>是PHP写的，用MySQL，这两个东西一下就占了一堆内存。对于我们这些穷苦人民的VPS十分不友好。</li>
  <li>不联网就没法预览最终效果。</li>
</ol>

<h2 id="octopress">对于Octopress的看法</h2>
<p>对于Octopress的优点网上也有一堆一堆的评论，我也就不太多说了。我们来看看我觉得的缺点：</p>

<h3 id="section-2">缺点</h3>
<ol>
  <li>Octopress是一个胖客户端的博客系统，在写博客前，你需要安装Git、Ruby等等东西，然后把环境调教好，才能开始写东西。</li>
  <li>如果去到别人的电脑，或者是Windows的话，那么写个博客都会非常的蛋疼。</li>
  <li>相对缺乏插件与主题。</li>
  <li>发布一篇文章就要重建整个博客，慢。</li>
</ol>

<h3 id="section-3">优点</h3>
<blockquote>
  <p>Octopress is jekyll with Batteries included.</p>
</blockquote>

<p>直接就是用Markdown语法，不用纠结org还是markdown。
可以方便地离线预览文章<code>rake preview</code>。</p>

<h3 id="misc">Misc</h3>
<p>Octopress默认的markdown引擎是rdiscount，这个实在是让人难以接受，连footnote都不支持。于是果断换成了kramdown<sup id="fnref:2"><a href="#fn:2" rel="footnote">2</a></sup>。kramdown支持footnote，甚至LaTex<sup id="fnref:3"><a href="#fn:3" rel="footnote">3</a></sup>。</p>

<h2 id="section-4">其他</h2>

<h3 id="section-5">写博客的三个阶段</h3>
<p>之前看过阮一峰写的一篇文章<a href="http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html">github Pages和Jekyll入门</a>，里面有讲到，喜欢写博客的人，会经历三个阶段：</p>

<blockquote>
  <p>第一阶段，刚接触Blog，觉得很新鲜，试着选择一个免费空间来写。
第二阶段，发现免费空间限制太多，就自己购买域名和空间，搭建独立博客。
第三阶段，觉得独立博客的管理太麻烦，最好在保留控制权的前提下，让别人来管，自己只负责写文章。</p>
</blockquote>

<p>好吧，我觉得独立博客的管理确实挺麻烦的，加上刚刚经历买了1年的VPS没到一个月，主机商就跑路的悲剧后，就愈发觉得自己负责可靠性等各种东西的维护确实挺麻烦的。就先暂时放在Github上面，日后再自己管理。</p>

<p>放在Github上面有个坏处是，对于页面都有缓存：<code>Cache-Control: max-age=86400</code>，也就是有一整天缓存时间，如果一天内有访问过这个页面的浏览器不刷新的话就直接从cache里面取了。不过应该也没什么大碍，基本不会一天更新好几次。而且除了自己也没什么人访问。</p>

<h3 id="emacs">Emacs</h3>
<p>Emacs既可以方便地写Wordpress也可以写Octopress。
<img src="/imgs/emacs-user-at-work.jpg" alt="Emacs User At Work" /><sup id="fnref:4"><a href="#fn:4" rel="footnote">4</a></sup></p>

<h3 id="ruby">Ruby</h3>
<p>这段时间看了Ruby，发现竟然可以比Python更加优美，我想，日后，可能也会有很多人从Python流向Ruby，就像曾经人们从Perl流向Python一样。</p>

<p>这就是江山代有才人出，长江后浪推前浪啊。事物总是在进步着。</p>

<hr />

<div class="footnotes">
  <ol>
    <li id="fn:1">
      <p><a href="https://github.com/punchagan/org2blog">https://github.com/punchagan/org2blog</a><a href="#fnref:1" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:2">
      <p><a href="http://kramdown.rubyforge.org/index.html">http://kramdown.rubyforge.org/index.html</a><a href="#fnref:2" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:3">
      <p><a href="http://yanping.me/cn/blog/2012/03/10/octopress-with-latex/">在Octopress中使用LaTeX</a><a href="#fnref:3" rel="reference">&#8617;</a></p>
    </li>
    <li id="fn:4">
      <p><a href="http://batsov.com/articles/2011/11/11/blogging-like-a-hacker-evolution/">http://batsov.com/articles/2011/11/11/blogging-like-a-hacker-evolution/</a><a href="#fnref:4" rel="reference">&#8617;</a></p>
    </li>
  </ol>
</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[配置多用户的虚拟主机]]></title>
    <link href="http://everet.org/2012/11/multi-user-nginx-php-server.html"/>
    <updated>2012-11-07T00:06:51+08:00</updated>
    <id>http://everet.org/2012/11/multi-user-nginx-php-server</id>
    <content type="html"><![CDATA[<p>趁这段时间有空，换成Xen的VPS，系统装了Ubuntu 12.04。决定重新配置一下服务器，另外将Web Server从Apache换成Nginx。</p>

<h2 id="section">目标</h2>

<p>搭建一个前端为nginx支持多用户的php虚拟主机。每个站点可以跑在不同的权限的用户下，一个站点被黑的时候希望不要影响到另一个站点，或者一个同学也不要可以随意访问到别的同学的内容。</p>

<h2 id="more---">行动<!-- more --></h2>

<h3 id="section-1">预备</h3>

<p>首先创建用户，例如user01。我们可以通过</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>bash  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>adduser user01
</span><span class='line'>mkdir ~user01/www
</span><span class='line'>chown user01:www-data ~user01/www
</span><span class='line'>chmod 750 ~user01/www
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>来添加用户，然后在<strong>~user01</strong>目录下面创建一个文件夹<strong>www</strong>，权限为750。group为www-data，这样，只有user01可以读写，www-data仅能读，其他人无权访问。</p>

<h3 id="php">php</h3>

<p>从php 5.3.5开始就直接内置支持fpm了，建议直接安装php 5.4。使用php-fpm（php Fastcgi Process Manager），目前这样的方式运行php性能貌似是最高的。</p>

<p>php-fpm的配置放在/etc/php5/fpm/pool.d/下面，我们只需要以.conf结尾命名我们的配置文件就行了，具体可以参考默认的www.conf文件。例如下面文件<strong>user01.conf</strong></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>ini  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="k">[user01]</span>
</span><span class='line'><span class="na">user</span> <span class="o">=</span> <span class="s">user01</span>
</span><span class='line'><span class="na">group</span> <span class="o">=</span> <span class="s">user01</span>
</span><span class='line'><span class="na">listen</span> <span class="o">=</span> <span class="s">/var/run/php5-fpm.user01.sock</span>
</span><span class='line'><span class="na">pm</span> <span class="o">=</span> <span class="s">dynamic</span>
</span><span class='line'><span class="na">pm.max_children</span> <span class="o">=</span> <span class="s">5</span>
</span><span class='line'><span class="na">pm.start_servers</span> <span class="o">=</span> <span class="s">1</span>
</span><span class='line'><span class="na">pm.min_spare_servers</span> <span class="o">=</span> <span class="s">1</span>
</span><span class='line'><span class="na">pm.max_spare_servers</span> <span class="o">=</span> <span class="s">3</span>
</span><span class='line'><span class="na">chdir</span> <span class="o">=</span> <span class="s">/</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>定义了php进程的权限为user01，监听文件为<strong>/var/run/php5-fpm.user01.sock</strong>。
这里的定义实际上是指的是用<strong>/var/run/php5-fpm.user01.sock</strong>这个来处理php时的权限为<strong>user01</strong>。到此为止，php的配置就完成了。</p>

<h3 id="nginx">nginx</h3>

<p>我们nginx的权限为www-data，这样可以读～user01/www目录的内容，但是不能写。nginx的站点配置比较简单。我们来看一下可以工作的简单的配置：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>nginx  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='nginx'><span class='line'><span class="k">server</span> <span class="p">{</span>
</span><span class='line'>    <span class="kn">server_name</span> <span class="s">user01.everet.org</span><span class="p">;</span><span class="kn">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s">&lt;pre&gt;&lt;code&gt;access_log</span>  <span class="s">/var/log/nginx/user01.everet.org.access.log</span><span class="p">;</span>
</span><span class='line'><span class="kn">error_log</span>   <span class="s">/var/log/nginx/user01.everet.org.error.log</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">root</span>    <span class="s">/home/user01/www/</span><span class="p">;</span>
</span><span class='line'><span class="kn">index</span>   <span class="s">index.php</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">location</span> <span class="s">/</span> <span class="p">{</span>
</span><span class='line'>    <span class="kn">try_files</span> <span class="nv">$uri</span> <span class="nv">$uri/</span> <span class="s">/index.php?</span><span class="nv">$args</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kn">location</span> <span class="p">~</span> <span class="sr">.php$</span> <span class="p">{</span>
</span><span class='line'>    <span class="kn">include</span> <span class="s">fastcgi_params</span><span class="p">;</span>
</span><span class='line'>    <span class="kn">fastcgi_pass</span> <span class="s">unix:/var/run/php5-fpm.user01.sock</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
</code></pre>

<p>也就是当处理到.php结尾的uri时，传递到<strong>/var/run/php5-fpm.user01.sock</strong>这个unix套接字处理，此时的php脚本的权限为user01。如果配置得当，就不会影响到其他用户。</p>

<h3 id="wordpress">wordpress</h3>

<p>我们用php的主要原因是wordpress，wordpress默认情况下非常臃肿，运行缓慢。因为页面基本只是在更新文章或者发表评论才会更新，所以平时不需要总是动态生成页面。对此，WP Super Cache插件可以很好地进行缓存。WP Super Cache有两种缓存模式一种是PHP缓存、另一种是mod_rewrite缓存（我们选择这个），mod_rewrite是生成静态的页面文件，然后通过.htaccess文件控制Apache来rewrite url。例如我们访问<a href="http://everet.org/2012/01/scar.html">http://everet.org/2012/01/scar.html</a>，其中uri为/2012/01/scar.html，进入到Apache通过rewrite后就变成了/wp-content/cache/supercache/everet.org/2012/01/scar.html/index.html，然后就可以读取静态文件返回给浏览器了。如果静态文件存在的话，就不需要经过php处理了，否则就调用php动态生成页面，同时插件还会生成那个页面的静态文件，下次就直接读取那个静态文件。</p>

<p>对于Apache，WP Super Cache插件生成的.htaccess可以很好的工作。然而，对于nginx，我们需要手写配置，以将uri映射的静态文件上面。我们来看一下下面的配置，这个是<a href="http://rtcamp.com/author/rahul-bansal/">Rahul Bansal</a>大牛的配置，我们拿来用一下。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>nginx  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='nginx'><span class='line'><span class="k">server</span> <span class="p">{</span>
</span><span class='line'>    <span class="kn">server_name</span> <span class="s">user01.everet.org</span><span class="p">;</span><span class="kn">&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s">&lt;pre&gt;&lt;code&gt;access_log</span> 	<span class="s">/var/log/nginx/user01.everet.org.access.log</span><span class="p">;</span>
</span><span class='line'><span class="kn">error_log</span> 	<span class="s">/var/log/nginx/user01.everet.org.error.log</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">root</span>	<span class="s">/home/user01/www/</span><span class="p">;</span>
</span><span class='line'><span class="kn">index</span>   <span class="s">index.php</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">set</span> <span class="nv">$cache_uri</span> <span class="nv">$request_uri</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">if</span> <span class="s">(</span><span class="nv">$request_method</span> <span class="p">=</span> <span class="s">POST)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kn">set</span> <span class="nv">$cache_uri</span> <span class="s">&quot;null</span> <span class="s">cache&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kn">if</span> <span class="s">(</span><span class="nv">$query_string</span> <span class="s">!=</span> <span class="s">&quot;&quot;)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kn">set</span> <span class="nv">$cache_uri</span> <span class="s">&quot;null</span> <span class="s">cache&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kn">if</span> <span class="s">(</span><span class="nv">$request_uri</span> <span class="p">~</span><span class="sr">*</span> <span class="s">&quot;(/wp-admin/|/xmlrpc.php|/wp-(app|cron|login|register|mail).php|wp-.*.php|/feed/|index.php|wp-comments-popup.php|wp-links-opml.php|wp-locations.php|sitemap(_index)?.xml|[a-z0-9_-]+-sitemap([0-9]+)?.xml)&quot;)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kn">set</span> <span class="nv">$cache_uri</span> <span class="s">&quot;null</span> <span class="s">cache&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kn">if</span> <span class="s">(</span><span class="nv">$http_cookie</span> <span class="p">~</span><span class="sr">*</span> <span class="s">&quot;comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_logged_in&quot;)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kn">set</span> <span class="nv">$cache_uri</span> <span class="s">&quot;null</span> <span class="s">cache&quot;</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kn">location</span> <span class="s">/</span> <span class="p">{</span>
</span><span class='line'>    <span class="kn">try_files</span> <span class="s">/wp-content/cache/supercache/</span><span class="nv">$http_host/$cache_uri/index.html</span> <span class="nv">$uri</span> <span class="nv">$uri/</span> <span class="s">/index.php</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kn">location</span> <span class="p">=</span> <span class="s">/favicon.ico</span> <span class="p">{</span>
</span><span class='line'>    <span class="kn">log_not_found</span> <span class="no">off</span><span class="p">;</span>
</span><span class='line'>    <span class="kn">access_log</span> <span class="no">off</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kn">location</span> <span class="p">=</span> <span class="s">/robots.txt</span> <span class="p">{</span>
</span><span class='line'>    <span class="kn">log_not_found</span> <span class="no">off</span><span class="p">;</span>
</span><span class='line'>    <span class="kn">access_log</span> <span class="no">off</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kn">location</span> <span class="p">~</span> <span class="sr">.php$</span> <span class="p">{</span>
</span><span class='line'>    <span class="kn">try_files</span> <span class="nv">$uri</span> <span class="s">/index.php</span><span class="p">;</span>
</span><span class='line'>    <span class="kn">include</span> <span class="s">fastcgi_params</span><span class="p">;</span>
</span><span class='line'>    <span class="kn">fastcgi_pass</span> <span class="s">unix:/var/run/php5-fpm.user01.sock</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>	
</span><span class='line'>
</span><span class='line'><span class="kn">location</span> <span class="p">~</span><span class="sr">*</span> <span class="s">.(ogg|ogv|svg|svgz|oet|otf|woff|mp4|ttf|css|rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|mp3|bmp|rtf)</span>$ <span class="p">{</span>
</span><span class='line'>    <span class="kn">expires</span> <span class="s">max</span><span class="p">;</span>
</span><span class='line'>    <span class="kn">log_not_found</span> <span class="no">off</span><span class="p">;</span>
</span><span class='line'>    <span class="kn">access_log</span> <span class="no">off</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
</code></pre>

<p>我们来慢慢阅读一下这个配置。首先，<code>set $cache_uri $request_uri</code>就是将请求的uri保存到我们的变量<code>$cache_uri</code>中。然后，如果请求方法是POST（<code>$request_method = POST</code>）、包含请求字符串（<code>$query_string != ""</code>）、请求的uri包含一些特殊的php文件（<code>$request_url ~* "(/wp-admin/|.........</code>）或者登录过评论过（通过cookie判断，<code>$http_cookie ~* "comment_author|w............"</code>），就将<code>$cache_uri</code>设置为’null cache’，这样是让<code>$cache_uri</code>这个字符串变量变成一个无意义的字符串，以让后面拼接出来的路径无意义。</p>

<p>对于 <code>try_files /wp-content/cache/supercache/$http_host/$cache_uri/index.html $uri $uri/ /index.php;</code></p>

<p>这个是依次尝试访问这些文件，成功就直接返回不再继续，如果都找不到就返回最后一个文件/index.php。我们还记得WP Super Cache生成的静态文件结构是<code>/wp-content/cache/supercache/everet.org/2012/01/scar.html/index.html</code>，也就是先尝试WP Super Cache生成的缓存，有就直接返回缓存。</p>

<p>用ab测试了一下，对于缓存后的博客文章的RPS可以到900，还挺快的啊。</p>

<p>另外，对于wordpress的wp-config.php文件，里面写有数据库的帐号和密码，所以我们需要将权限改为600，即只有user01自己能够读写，其他人无权访问。</p>

<h2 id="section-2">参考资料</h2>

<ul>
  <li><a href="http://rtcamp.com/tutorials/wordpress-nginx-wp-super-cache/">WordPress-Nginx + WP Super cache</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[探索wordpress验证码插件Clickcha]]></title>
    <link href="http://everet.org/2012/07/clickcha.html"/>
    <updated>2012-07-16T20:42:02+08:00</updated>
    <id>http://everet.org/2012/07/clickcha</id>
    <content type="html"><![CDATA[<p>Clickcha是一种新型的图像验证码，只需要用鼠标点击即可以通过验证，虽然对于专门的攻击，这种验证码没什么抵挡能力，但是它还是挺有趣。</p>

<p>对于这种验证码的识别，可以用<a href="http://zh.wikipedia.org/wiki/%E9%9C%8D%E5%A4%AB%E5%8F%98%E6%8D%A2">霍夫变换</a>，就可以方便地找到最圆的圆，以及那些正方形。</p>

<p>Clickcha有提供wordpress插件，很容易就可以和自己的wordpress整合在一起。<!-- more --></p>

<p><a href="http://everet.org/wp-content/uploads/2012/07/challenge-1.png"><img src="http://everet.org/wp-content/uploads/2012/07/challenge-1.png" alt="" /></a></p>

<p><a href="http://everet.org/wp-content/uploads/2012/07/challenge-2.png"><img src="http://everet.org/wp-content/uploads/2012/07/challenge-2.png" alt="" /></a></p>

<p><a href="http://everet.org/wp-content/uploads/2012/07/challenge.png"><img src="http://everet.org/wp-content/uploads/2012/07/challenge.png" alt="" /></a></p>

<p>我们从clickcha的源码中看看这个插件的工作原理。</p>

<h2 id="section">生成验证码</h2>

<p>首先，插件在comment_form过程下增加了钩子，这样就可以将自己的页面的代码插入到评论框下面。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>php  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">add_action(‘comment_form’, ‘clickcha_comment_form’, 10);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>其中有一段js，用于验证码token和图片的获取。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>javascript  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">function</span> <span class="nx">clickcha_token</span><span class="p">(</span><span class="nx">token</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="err">‘</span><span class="nx">clickchatoken</span><span class="err">’</span><span class="p">).</span><span class="nx">value</span> <span class="o">=</span> <span class="nx">token</span><span class="p">;</span>
</span><span class='line'>    <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="err">‘</span><span class="nx">clickcha</span><span class="err">’</span><span class="p">).</span><span class="nx">src</span> <span class="o">=</span> <span class="err">‘</span><span class="nx">http</span><span class="o">:</span><span class="c1">//api.clickcha.com/challenge?key=&amp;amp;token=’ + token;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="kd">function</span> <span class="nx">clickcha_get_token</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">e</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="err">‘</span><span class="nx">script</span><span class="err">’</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">e</span><span class="p">.</span><span class="nx">src</span> <span class="o">=</span> <span class="err">‘</span><span class="nx">http</span><span class="o">:</span><span class="c1">//api.clickcha.com/token?output=json&amp;amp;key=&amp;amp;rnd=’ + Math.random();</span>
</span><span class='line'>    <span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span> <span class="err">‘</span><span class="nx">text</span><span class="o">/</span><span class="nx">javascript</span><span class="err">’</span><span class="p">;</span>
</span><span class='line'>    <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="err">‘</span><span class="nx">head</span><span class="err">’</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">clickcha_get_token</span><span class="p">();</span>
</span><span class='line'><span class="c1">// Firefox’s bfcache workaround</span>
</span><span class='line'><span class="nb">window</span><span class="p">.</span><span class="nx">onpageshow</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">persisted</span><span class="p">)</span> <span class="nx">clickcha_get_token</span><span class="p">();};</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>在下面这段语句增加引用服务器生成的js。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>javascript  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="err">‘</span><span class="nx">clickcha</span><span class="err">’</span><span class="p">).</span><span class="nx">src</span> <span class="o">=</span> <span class="err">‘</span><span class="nx">http</span><span class="o">:</span><span class="c1">//api.clickcha.com/challenge?key=&amp;amp;token=’ + token;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>clickcha服务器生成的被引用的那段js里面的内容</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>javascript  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">clickcha_token</span><span class="p">(</span><span class="err">‘</span><span class="nx">ww6pGtBKXh_IdBDKVNHYVmeT3fTPDo8pwqCwpUqPIS</span><span class="o">-</span><span class="nx">ZhYGKhc6SN9TdpZzudXujexPaKfarM57QoTPtd0AqOw</span><span class="err">’</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>服务器clickcha服务器被引用的js里，调用了clickcha_token来设置表单中的token和验证码的图片。</p>

<h2 id="section-1">验证</h2>

<p>插件在评论预处理挂上处理钩子。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>php  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">add_action(‘preprocess_comment’, ‘clickcha_comment_post’);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>然后在评论预处理过程向clickcha的服务器发送GET请求验证，如果服务器返回’PASSED’，那么通过验证，否则直接调用wp_die结束处理过程。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>php  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">$response=file_get_contents(‘http://api.clickcha.com/verify?key=’.$public_key.’&amp;amp;token=’.$_POST[‘clickcha_token’].’&amp;amp;private_key=’.$private_key.’&amp;amp;x=’.$_POST[‘clickcha_x’].’&amp;amp;y=’.$_POST[‘clickcha_y’]);</span>
</span><span class='line'><span class="x">$result = get_submatch(‘|(\w+)|’, $response);</span>
</span><span class='line'><span class="x">if(!empty($result)) {</span>
</span><span class='line'><span class="x">    if($result!=’PASSED’) {</span>
</span><span class='line'><span class="x">        wp_die(“Clickcha verification failed ($result). Please go back and try again.”);</span>
</span><span class='line'><span class="x">    }</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2 id="section-2"> 演示</h2>

<p>clickcha官方demo：<a href="http://clickcha.com/demo/">http://clickcha.com/demo/</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[从syntaxhighlighter evolved迁移至wp-syntax]]></title>
    <link href="http://everet.org/2012/06/database-migrate-from-syntaxhighlighter-evolved-to-wp-syntax.html"/>
    <updated>2012-06-13T00:33:42+08:00</updated>
    <id>http://everet.org/2012/06/database-migrate-from-syntaxhighlighter-evolved-to-wp-syntax</id>
    <content type="html"><![CDATA[<p>Syntaxhighlighter Evolved是一款Javascript的语法高亮插件，高亮是在用户的浏览器完成，这样可以减轻服务器的压力。而WP-Syntax恰恰相反，它是在服务器完成语法高亮。WP-Syntax比Syntaxhighlighter Evolved更有优势的地方是支持rss高亮，而且支持的语言众多，使用了GeSHi高亮引擎，可定制性相当强，至于高亮带来的压力，我们可以用缓存插件来解决。</p>

<h4 id="syntaxhighlighter-evolvedplugin-usage">Syntaxhighlighter Evolved Plugin Usage</h4>

<p>Just wrap your code in <code>[language]</code>, such as <code>[php]code here[/php]**</code> or <code>[css]code here[/css]</code>.</p>

<h4 id="wp-syntaxbasic-usage">WP-Syntax Basic Usage</h4>

<p>Wrap code blocks with <code>&lt;pre lang="LANGUAGE" line="1"&gt;</code> and <code>&lt;/pre&gt;</code></p>

<p>我们很明显就可以看到两者之间的区别。Syntaxhighlighter Evolved用的是非常特殊的高亮标记<strong>[language]</strong>，如果我们直接卸载Syntaxhighlighter Evolved然后装上WP-Syntax就会导致Syntaxhighlighter Evolved的高亮标记直接输出，而且代码不会被高亮。</p>

<p>我们必须将Syntaxhighlighter Evolved的高亮标记全部替换成WP-Syntax的高亮标记。</p>

<p>对于这种这么繁琐的事情，我们就把它交给Python来完成吧。<!-- more --></p>

<h3 id="section"> 代码</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>python  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span> <span class="nb">id</span><span class="o">=</span><span class="s">&quot;usrbinenv-python&quot;</span><span class="o">&gt;</span><span class="err">!</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">env</span> <span class="n">python</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c"># author:  Hua Liang [ Stupid ET ]</span>
</span><span class='line'><span class="c"># email:   et@everet.org</span>
</span><span class='line'><span class="c"># website: http://EverET.org</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># database migrate from syntaxhighlighter evolved to wp-syntax&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">import</span> <span class="nn">re</span><span class="o">,</span> <span class="nn">sys</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">sub</span><span class="p">(</span><span class="n">pat</span><span class="p">,</span> <span class="n">text</span><span class="p">,</span> <span class="n">new_str</span><span class="p">):</span>
</span><span class='line'>    <span class="n">py</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="n">pat</span><span class="p">,</span> <span class="n">re</span><span class="o">.</span><span class="n">IGNORECASE</span><span class="p">)</span>
</span><span class='line'>    <span class="n">sql</span> <span class="o">=</span> <span class="n">py</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="n">new_str</span><span class="p">,</span> <span class="n">text</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">sql</span> <span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">sql</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">stdin</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</span><span class='line'><span class="c">#sql = open(‘et.sql’).read()&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span> <span class="nb">id</span><span class="o">=</span><span class="s">&quot;python--pre-langpython&quot;</span><span class="o">&gt;</span><span class="p">[</span><span class="n">python</span><span class="p">]</span> <span class="o">=&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">pre</span> <span class="n">lang</span><span class="o">=</span><span class="s">&quot;python&quot;</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">sql</span> <span class="o">=</span> <span class="n">sub</span><span class="p">(</span><span class="n">r</span><span class="err">’</span><span class="p">[</span><span class="n">python</span><span class="o">.*</span><span class="err">?</span><span class="p">]</span><span class="err">’</span><span class="p">,</span> <span class="n">sql</span><span class="p">,</span> <span class="err">‘</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">pre</span> <span class="n">lang</span><span class="o">=</span><span class="s">&quot;python&quot;</span> <span class="n">escaped</span><span class="o">=</span><span class="s">&quot;true&quot;</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="err">’</span><span class="p">)</span>
</span><span class='line'><span class="n">sql</span> <span class="o">=</span> <span class="n">sub</span><span class="p">(</span><span class="n">r</span><span class="err">’</span><span class="p">[</span><span class="o">/</span><span class="n">python</span><span class="p">]</span><span class="err">’</span><span class="p">,</span> <span class="n">sql</span><span class="p">,</span> <span class="err">‘</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">/</span><span class="n">pre</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="err">’</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">sql</span> <span class="o">=</span> <span class="n">sub</span><span class="p">(</span><span class="n">r</span><span class="err">’</span><span class="p">[</span><span class="n">plain</span><span class="o">.*</span><span class="err">?</span><span class="p">]</span><span class="err">’</span><span class="p">,</span> <span class="n">sql</span><span class="p">,</span> <span class="err">‘</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">pre</span> <span class="n">lang</span><span class="o">=</span><span class="s">&quot;text&quot;</span> <span class="n">escaped</span><span class="o">=</span><span class="s">&quot;true&quot;</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="err">’</span><span class="p">)</span>
</span><span class='line'><span class="n">sql</span> <span class="o">=</span> <span class="n">sub</span><span class="p">(</span><span class="n">r</span><span class="err">’</span><span class="p">[</span><span class="o">/</span><span class="n">plain</span><span class="p">]</span><span class="err">’</span><span class="p">,</span> <span class="n">sql</span><span class="p">,</span> <span class="err">‘</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">/</span><span class="n">pre</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="err">’</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">sql</span> <span class="o">=</span> <span class="n">sub</span><span class="p">(</span><span class="n">r</span><span class="err">’</span><span class="p">[</span><span class="n">code</span><span class="o">.*</span><span class="err">?</span><span class="p">]</span><span class="err">’</span><span class="p">,</span> <span class="n">sql</span><span class="p">,</span> <span class="err">‘</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">pre</span> <span class="n">lang</span><span class="o">=</span><span class="s">&quot;text&quot;</span> <span class="n">escaped</span><span class="o">=</span><span class="s">&quot;true&quot;</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="err">’</span><span class="p">)</span>
</span><span class='line'><span class="n">sql</span> <span class="o">=</span> <span class="n">sub</span><span class="p">(</span><span class="n">r</span><span class="err">’</span><span class="p">[</span><span class="o">/</span><span class="n">code</span><span class="p">]</span><span class="err">’</span><span class="p">,</span> <span class="n">sql</span><span class="p">,</span> <span class="err">‘</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">/</span><span class="n">pre</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="err">’</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">sql</span> <span class="o">=</span> <span class="n">sub</span><span class="p">(</span><span class="n">r</span><span class="err">’</span><span class="p">([</span><span class="n">c</span><span class="p">(</span>\<span class="n">s</span><span class="o">.*</span><span class="err">?</span><span class="p">)</span><span class="err">?</span><span class="p">])</span><span class="err">’</span><span class="p">,</span> <span class="n">sql</span><span class="p">,</span> <span class="err">‘</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">pre</span> <span class="n">lang</span><span class="o">=</span><span class="s">&quot;cpp&quot;</span> <span class="n">escaped</span><span class="o">=</span><span class="s">&quot;true&quot;</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="err">’</span><span class="p">)</span>
</span><span class='line'><span class="n">sql</span> <span class="o">=</span> <span class="n">sub</span><span class="p">(</span><span class="n">r</span><span class="err">’</span><span class="p">[</span><span class="o">/</span><span class="n">c</span><span class="p">]</span><span class="err">’</span><span class="p">,</span> <span class="n">sql</span><span class="p">,</span> <span class="err">‘</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">/</span><span class="n">pre</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="err">’</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">sql</span> <span class="o">=</span> <span class="n">sub</span><span class="p">(</span><span class="n">r</span><span class="err">’</span><span class="p">[</span><span class="n">shell</span><span class="o">.*</span><span class="err">?</span><span class="p">]</span><span class="err">’</span><span class="p">,</span> <span class="n">sql</span><span class="p">,</span> <span class="err">‘</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">pre</span> <span class="n">lang</span><span class="o">=</span><span class="s">&quot;bash&quot;</span> <span class="n">escaped</span><span class="o">=</span><span class="s">&quot;true&quot;</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="err">’</span><span class="p">)</span>
</span><span class='line'><span class="n">sql</span> <span class="o">=</span> <span class="n">sub</span><span class="p">(</span><span class="n">r</span><span class="err">’</span><span class="p">[</span><span class="o">/</span><span class="n">shell</span><span class="p">]</span><span class="err">’</span><span class="p">,</span> <span class="n">sql</span><span class="p">,</span> <span class="err">‘</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">/</span><span class="n">pre</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="err">’</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">sql</span> <span class="o">=</span> <span class="n">sub</span><span class="p">(</span><span class="n">r</span><span class="err">’</span><span class="p">[</span><span class="n">php</span><span class="o">.*</span><span class="err">?</span><span class="p">]</span><span class="err">’</span><span class="p">,</span> <span class="n">sql</span><span class="p">,</span> <span class="err">‘</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">pre</span> <span class="n">lang</span><span class="o">=</span><span class="s">&quot;php&quot;</span> <span class="n">escaped</span><span class="o">=</span><span class="s">&quot;true&quot;</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="err">’</span><span class="p">)</span>
</span><span class='line'><span class="n">sql</span> <span class="o">=</span> <span class="n">sub</span><span class="p">(</span><span class="n">r</span><span class="err">’</span><span class="p">[</span><span class="o">/</span><span class="n">php</span><span class="p">]</span><span class="err">’</span><span class="p">,</span> <span class="n">sql</span><span class="p">,</span> <span class="err">‘</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">/</span><span class="n">pre</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="err">’</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">sql</span> <span class="o">=</span> <span class="n">sub</span><span class="p">(</span><span class="n">r</span><span class="err">’</span><span class="p">[</span><span class="n">lisp</span><span class="o">.*</span><span class="err">?</span><span class="p">]</span><span class="err">’</span><span class="p">,</span> <span class="n">sql</span><span class="p">,</span> <span class="err">‘</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">pre</span> <span class="n">lang</span><span class="o">=</span><span class="s">&quot;lisp&quot;</span> <span class="n">escaped</span><span class="o">=</span><span class="s">&quot;true&quot;</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="err">’</span><span class="p">)</span>
</span><span class='line'><span class="n">sql</span> <span class="o">=</span> <span class="n">sub</span><span class="p">(</span><span class="n">r</span><span class="err">’</span><span class="p">[</span><span class="o">/</span><span class="n">lisp</span><span class="p">]</span><span class="err">’</span><span class="p">,</span> <span class="n">sql</span><span class="p">,</span> <span class="err">‘</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">/</span><span class="n">pre</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="err">’</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">sql</span> <span class="o">=</span> <span class="n">sub</span><span class="p">(</span><span class="n">r</span><span class="err">’</span><span class="p">[</span><span class="n">javascript</span><span class="o">.*</span><span class="err">?</span><span class="p">]</span><span class="err">’</span><span class="p">,</span> <span class="n">sql</span><span class="p">,</span> <span class="err">‘</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">pre</span> <span class="n">lang</span><span class="o">=</span><span class="s">&quot;javascript&quot;</span> <span class="n">escaped</span><span class="o">=</span><span class="s">&quot;true&quot;</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="err">’</span><span class="p">)</span>
</span><span class='line'><span class="n">sql</span> <span class="o">=</span> <span class="n">sub</span><span class="p">(</span><span class="n">r</span><span class="err">’</span><span class="p">[</span><span class="o">/</span><span class="n">javascript</span><span class="p">]</span><span class="err">’</span><span class="p">,</span> <span class="n">sql</span><span class="p">,</span> <span class="err">‘</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">/</span><span class="n">pre</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="err">’</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">sql</span> <span class="o">=</span> <span class="n">sub</span><span class="p">(</span><span class="n">r</span><span class="err">’</span><span class="p">[</span><span class="n">html</span><span class="o">.*</span><span class="err">?</span><span class="p">]</span><span class="err">’</span><span class="p">,</span> <span class="n">sql</span><span class="p">,</span> <span class="err">‘</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">pre</span> <span class="n">lang</span><span class="o">=</span><span class="s">&quot;html&quot;</span> <span class="n">escaped</span><span class="o">=</span><span class="s">&quot;true&quot;</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="err">’</span><span class="p">)</span>
</span><span class='line'><span class="n">sql</span> <span class="o">=</span> <span class="n">sub</span><span class="p">(</span><span class="n">r</span><span class="err">’</span><span class="p">[</span><span class="o">/</span><span class="n">html</span><span class="p">]</span><span class="err">’</span><span class="p">,</span> <span class="n">sql</span><span class="p">,</span> <span class="err">‘</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">/</span><span class="n">pre</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="err">’</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">sql</span> <span class="o">=</span> <span class="n">sub</span><span class="p">(</span><span class="n">r</span><span class="err">’</span><span class="p">[</span><span class="n">c</span><span class="o">++.*</span><span class="err">?</span><span class="p">]</span><span class="err">’</span><span class="p">,</span> <span class="n">sql</span><span class="p">,</span> <span class="err">‘</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">pre</span> <span class="n">lang</span><span class="o">=</span><span class="s">&quot;cpp&quot;</span> <span class="n">escaped</span><span class="o">=</span><span class="s">&quot;true&quot;</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="err">’</span><span class="p">)</span>
</span><span class='line'><span class="n">sql</span> <span class="o">=</span> <span class="n">sub</span><span class="p">(</span><span class="n">r</span><span class="err">’</span><span class="p">[</span><span class="o">/</span><span class="n">c</span><span class="o">++</span><span class="p">]</span><span class="err">’</span><span class="p">,</span> <span class="n">sql</span><span class="p">,</span> <span class="err">‘</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">/</span><span class="n">pre</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="err">’</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">sql</span> <span class="o">=</span> <span class="n">sub</span><span class="p">(</span><span class="n">r</span><span class="err">’</span><span class="p">[</span><span class="n">c</span><span class="c">#.*?]’, sql, ‘&amp;lt;pre lang=&quot;csharp&quot; escaped=&quot;true&quot;&amp;gt;’)</span>
</span><span class='line'><span class="n">sql</span> <span class="o">=</span> <span class="n">sub</span><span class="p">(</span><span class="n">r</span><span class="err">’</span><span class="p">[</span><span class="o">/</span><span class="n">c</span><span class="c">#]’, sql, ‘&amp;lt;/pre&amp;gt;’)&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span> <span class="nb">id</span><span class="o">=</span><span class="s">&quot;for-s-in-refindallrpre-lang-sql&quot;</span><span class="o">&gt;</span><span class="k">for</span> <span class="n">s</span> <span class="ow">in</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="n">r</span><span class="err">’</span><span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="n">pre</span> <span class="n">lang</span><span class="o">=</span><span class="s">&quot;.*?&quot;</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="err">’</span><span class="p">,</span> <span class="n">sql</span><span class="p">):</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="c">#     print s</span>
</span><span class='line'><span class="c"># for s in re.findall(r’[/.*?]’, sql):</span>
</span><span class='line'><span class="c">#     print s&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span> <span class="nb">id</span><span class="o">=</span><span class="s">&quot;output--openfix-etsql-w&quot;</span><span class="o">&gt;</span><span class="n">output</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="err">‘</span><span class="n">fix</span><span class="o">-</span><span class="n">et</span><span class="o">.</span><span class="n">sql</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">w</span><span class="err">’</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">output</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">stdout</span>
</span><span class='line'><span class="n">output</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">sql</span><span class="p">)</span>
</span><span class='line'><span class="n">output</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>最新源码：<a href="https://github.com/cedricporter/et-python/blob/master/migrate-db/migrant.py">https://github.com/cedricporter/et-python/blob/master/migrate-db/migrant.py</a></p>

<h3 id="section-1">使用</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>bash  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>mysqldump -u root -p wordpress_db | ./migrant.py &amp;gt; fix.sql
</span><span class='line'>mysql -u root -p wordpress_db &amp;lt; fix.sql
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>整个过程就是
  1. 使用mysqldump将数据库dump成文本
  2. 通过我们的过滤器程序migrant.py将syntaxhighlighter evolved的高亮风格变成wp-syntax的高亮风格。
  3. 导入回数据库。</p>

<p>搞定!</p>

<p>对于WP-Syntax的Python多行字符串高亮的bug解决请见：</p>

<p><a href="http://everet.org/2012/06/fix-wp-syntax-python-string-bug.html">http://everet.org/2012/06/fix-wp-syntax-python-string-bug.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[修正WP-Syntax高亮Python字符串的bug]]></title>
    <link href="http://everet.org/2012/06/fix-wp-syntax-python-string-bug.html"/>
    <updated>2012-06-12T05:33:17+08:00</updated>
    <id>http://everet.org/2012/06/fix-wp-syntax-python-string-bug</id>
    <content type="html"><![CDATA[<p><strong>SyntaxHighlighter Evolved</strong>是wordpress的一个Javascript实现的代码高亮插件，可惜的我的vps网速非常慢，加载一个有代码的页面要等很久才会高亮，这让对读者是非常不友好的，而且不支持rss输出的高亮。于是我想把代码高亮放在服务器这边做好。虽然有人说WP-Syntax会造成服务器压力大，但是如果我们将文章页面都缓存了，那就不存在WP-Syntax高亮时造成的过多的压力。</p>

<p>于是我准备切换到WP-Syntax阵营。不幸的是，我刚刚装上WP-Syntax这个插件，贴上的<a href="http://everet.org/2012/03/ftp-server.html">ftp.py</a>的Python代码，就发现语法高亮出错了！！</p>

<p>我们可以用简单的代码再现一次这个bug。就是在多行’'’注释时会出现这个bug。<!-- more --></p>

<p><a href="http://everet.org/wp-content/uploads/2012/06/Screenshot-from-2012-06-11-211511.png"><img src="http://everet.org/wp-content/uploads/2012/06/Screenshot-from-2012-06-11-211511.png" alt="" /></a></p>

<p>好，那我们现在看看如何解决这个bug。</p>

<p>我发现问题处在<strong>wp-syntax/geshi/geshi/python.php</strong>这个文件里。</p>

<p>问题出在设置Python字符串的标记时漏了’’‘，我们给他加上就好了。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>php  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="x">//’QUOTEMARKS’ =&amp;gt; array(‘”””’, ‘”’, “’”),</span>
</span><span class='line'><span class="x">‘QUOTEMARKS’ =&amp;gt; array(‘”””’, ‘”’, “’”, “’’’”),</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>最后效果如下。</p>

<p><a href="http://everet.org/wp-content/uploads/2012/06/Screenshot-from-2012-06-11-211937.png"><img src="http://everet.org/wp-content/uploads/2012/06/Screenshot-from-2012-06-11-211937.png" alt="" /></a></p>

<p>最后向WP-Syntax的作者发了邮件，觉得老外真是负责任，很快就回了邮件。</p>

<p>bug的确切地方是出在了插件使用的GESHI高亮库。不过我看了Python.php的最后一次更新是在08年，觉得还是向WP-Syntax作者报告比较靠谱，毕竟用户大都还是使用WP-Syntax而不是直接面向GESHI。</p>
]]></content>
  </entry>
  
</feed>
