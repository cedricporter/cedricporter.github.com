<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Clover | EverET.org]]></title>
  <link href="http://everet.org/tag/clover/atom.xml" rel="self"/>
  <link href="http://everet.org/"/>
  <updated>2013-01-08T13:15:31+08:00</updated>
  <id>http://everet.org/</id>
  <author>
    <name><![CDATA[Stupid ET]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Clover —— Computer Simulation Origami]]></title>
    <link href="http://everet.org/2012/04/clover.html"/>
    <updated>2012-04-16T08:09:48+08:00</updated>
    <id>http://everet.org/2012/04/clover</id>
    <content type="html"><![CDATA[<p>Clover —— Computer Simulation Origami，计算机模拟折纸。</p>

<p>历经C++、Python加Ogre，最后变成C#加WPF。我们的代码被推翻了一次又一次….</p>

<p>终于Clover成型了。开发也告一段落了。</p>

<p>clover进度：<a href="http://everet.org/2012/01/clover-progress.html">http://everet.org/2012/01/clover-progress.html</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Clover折纸数据结构的文件保存]]></title>
    <link href="http://everet.org/2012/03/clover-save-file.html"/>
    <updated>2012-03-11T08:49:53+08:00</updated>
    <id>http://everet.org/2012/03/clover-save-file</id>
    <content type="html"><![CDATA[<p>Clover的数据结构是由面层，边层和点层所组成。</p>

<h2 id="section">面层</h2>

<p>面层是一棵二叉树外加一个面组用于实现重叠的面的拾取和避免Z-Buffer失效。当发生折叠的时候，肯定至少有一个面会被分割成为两个面，所以二叉树的叶子增加两个节点，叶子更新，渲染层也需要更新。</p>

<p><a href="http://everet.org/wp-content/uploads/2012/03/facetree.png"><img src="http://everet.org/wp-content/uploads/2012/03/facetree_thumb.png" alt="facetree" /></a></p>

<h2 id="section-1"></h2>

<h2 id="section-2">边层</h2>

<p>边层是二叉树组成的森林，</p>

<p><a href="http://everet.org/wp-content/uploads/2012/03/facetree1.png"><img src="http://everet.org/wp-content/uploads/2012/03/facetree_thumb1.png" alt="facetree" /></a></p>

<!-- more -->

<h2 id="section-3">点层</h2>

<p>至于点层，就是十字链表。就是链表串着链表。当一个点的位置发生变化，它就会克隆一个自己向下插入到历史表中。有新的点产生时，则会向右边增加。这里是整个数据结构的核心，面层和边层只是对于点层的索引罢了。</p>

<p>我们在保存前会给顶点分配ID。</p>

<p>所以整个折纸过程都在这个数据结构里面。只要辅助我们精心设计的ShadowSystem，就可以Undo和Redo，甚至重放整个折纸过程。</p>

<h2 id="section-4"></h2>

<h2 id="section-5">保存文件</h2>

<p>现在我们的问题可以抽象为，保存面二叉树，边森林，和点十字链表，只是将他们保存到文件肯定很容易，但是如何将他们之间的关系保存到文件里面就是需要我们细细斟酌了。</p>

<p>今晚花了一整个晚上把保存文件和读取文件做了，借鉴了编译器的语法分析器的思想和关系数据库的表之间的关联的思想，来做文件的保存和读取。</p>

<h3 id="section-6">文件格式文法</h3>

<p>```
<strong>Clover</strong>                –&gt; VertexLayer EdgeLayer FaceLayer ShadowSytem</p>

<p><strong>ShadowSysem</strong>-&gt;TrunkName num SnapshotNode*</p>

<p><strong>SnapshotNode</strong>  -&gt; type num face+ num edge* num vertex_id  originVertexListCount  originEdgeListCount</p>

<p><strong>VertexLayer</strong>  -&gt; TrunkName VertexTable vertex_count</p>

<p><strong>EdgeLayer</strong>    -&gt; TrunkName num EdgeTree+</p>

<p><strong>EdgeTree</strong>       –&gt; Edge+</p>

<p><strong>FaceLayer</strong>     –&gt; TrunkName FaceTree</p>

<p><strong>FaceTree</strong>       –&gt; Face+</p>

<p><strong>Edge</strong>              –&gt; edge_id vertex1_id vertex2_id</p>

<table>
  <tbody>
    <tr>
      <td>–1</td>
    </tr>
  </tbody>
</table>

<p><strong>Face</strong>              –&gt; face_id start_vertex1 start_vertex2 num edge_id+</p>

<table>
  <tbody>
    <tr>
      <td>–1</td>
    </tr>
  </tbody>
</table>

<p><strong>face_id</strong>         -&gt; positive_number</p>

<p><strong>edge_id</strong>        -&gt; positive_number
```</p>

<p>我使用自顶向下的语法分析方法，这样实现起来很快，也就是一大堆递归。</p>

<p>敏捷~</p>

<p>那么我们如何关联面和边,边和点呢? 这个借鉴了关系数据库的思想,使用主码来关联表,也就是我给边和点都分配了id后存入,这样读取的时候可以根据id来重建这些数据结构的联系.</p>

<p>再次印证了很多年前就被灌输的 程序=数据结构+算法 的思想了。</p>

<p>就是这么简单啦~~哇哈哈~~~~~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Clover数据结构]]></title>
    <link href="http://everet.org/2012/02/clover-data-structure.html"/>
    <updated>2012-02-07T05:09:44+08:00</updated>
    <id>http://everet.org/2012/02/clover-data-structure</id>
    <content type="html"><![CDATA[<p><a href="http://everet.org/wp-content/uploads/2012/02/fig6.gif"><img src="http://everet.org/wp-content/uploads/2012/02/fig6_thumb.gif" alt="fig6" /></a></p>

<!-- more -->

<p><a href="http://everet.org/wp-content/uploads/2012/02/fig7.gif"><img src="http://everet.org/wp-content/uploads/2012/02/fig7_thumb.gif" alt="fig7" /></a></p>

<p>论文：</p>

<p><a href="http://www.om.sist.chukyo-u.ac.jp/main/research/origami/journal/jvca.html#conclusions">http://www.om.sist.chukyo-u.ac.jp/main/research/origami/journal/jvca.html#conclusions</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Clover架构设计会议记录]]></title>
    <link href="http://everet.org/2012/01/clover-architecture-design-meeting.html"/>
    <updated>2012-01-31T00:23:14+08:00</updated>
    <id>http://everet.org/2012/01/clover-architecture-design-meeting</id>
    <content type="html"><![CDATA[<p><strong>消息记录</strong></p>

<p>消息分组:讨论组</p>

<p>消息对象:我怎么听见喘息声。。</p>

<p>日期: 2012-01-30</p>

<p>XellOs</p>

<p>15:09:13</p>

<p>![UARF0O4MI<em>$6HXMIHAA](http://everet.org/wp-content/uploads/2012/01/UARF0O4MI</em>6HXMIHAA98_thumb.jpg)</p>

<p>XellOs</p>

<p>15:10:46</p>

<p>额</p>

<p>XellOs</p>

<p>15:10:56</p>

<p>好吧<!-- more --></p>

<p>15:11:04</p>

<p><a href="http://everet.org/wp-content/uploads/2012/01/EARXHLNMG6QY4MSIYYJ.png"><img src="http://everet.org/wp-content/uploads/2012/01/EARXHLNMG6QY4MSIYYJ_thumb.png" alt="EARXH%L@NMG6Q@Y4MSIY(YJ" /></a>15:11:04
杨旭瑜&lt;yangxuyu_fish@qq.com&gt;中止了语音通话。</p>

<p>XellOs</p>

<p>15:11:08</p>

<p>那个顶点是做图单位</p>

<p>XellOs</p>

<p>15:11:16</p>

<p>粒子是力的运算单位</p>

<p>XellOs</p>

<p>15:11:18</p>

<p>不一样的</p>

<p>XellOs</p>

<p>15:11:30</p>

<p>一个粒子可以用多个顶点来做图</p>

<p>XellOs</p>

<p>15:11:37</p>

<p>恩 是的</p>

<p>XellOs</p>

<p>15:11:39</p>

<p>是这个意思</p>

<p>XellOs</p>

<p>15:11:47</p>

<p>就是说粒子只是一个单位而已</p>

<p>XellOs</p>

<p>15:11:58</p>

<p>顶点应该多过粒子的数目的啊</p>

<p>XellOs</p>

<p>15:12:16</p>

<p>顶点只是画图的啊</p>

<p>XellOs</p>

<p>15:12:46</p>

<p>是啊</p>

<p>XellOs</p>

<p>15:12:50</p>

<p>和做terrain差不多啊</p>

<p>XellOs</p>

<p>15:12:54</p>

<p>是那么多的啊</p>

<p>XellOs</p>

<p>15:12:55</p>

<p>很多的啊</p>

<p>XellOs</p>

<p>15:13:09</p>

<p>我们做n body都是30000个粒子了</p>

<p>XellOs</p>

<p>15:13:28</p>

<p>用bill board显示的</p>

<p>XellOs</p>

<p>15:13:33</p>

<p>就是30000啊！</p>

<p>XellOs</p>

<p>15:14:07</p>

<p>恩</p>

<p>XellOs</p>

<p>15:14:48</p>

<p>这样</p>

<p>XellOs</p>

<p>15:15:10</p>

<p>你想像粒子成为一张布上的支撑点</p>

<p>XellOs</p>

<p>15:15:34</p>

<p>然后你用一张布在只受到重力作用这样平铺在上面</p>

<p>XellOs</p>

<p>15:15:52</p>

<p>但是粒子中间的间隙是可以有多个顶点绘制的</p>

<p>XellOs</p>

<p>15:16:39</p>

<p>[![UARF0O4MI<em>$6HXMIHAA]{98](http://everet.org/wp-content/uploads/2012/01/UARF0O4MI</em>6HXMIHAA98<em>thumb1.jpg)](http://everet.org/wp-content/uploads/2012/01/UARF0O4MI</em>6HXMIHAA981.jpg)</p>

<p>XellOs</p>

<p>15:16:47</p>

<p>这个，我还没有考虑数据结构上的</p>

<p>屠文翔</p>

<p>15:16:50</p>

<p>我怎么听见喘息声。。</p>

<p>XellOs</p>

<p>15:16:50</p>

<p>我想想哈。。。</p>

<p>XellOs</p>

<p>15:16:57</p>

<p>我也听见了</p>

<p>XellOs</p>

<p>15:17:07</p>

<p>![UARF0O4MI<em>$6HXMIHAA](http://everet.org/wp-content/uploads/2012/01/UARF0O4MI</em>6HXMIHAA98_thumb2.jpg)</p>

<p>XellOs</p>

<p>15:17:11</p>

<p>怎么可能</p>

<p>XellOs</p>

<p>15:17:14</p>

<p>不可能的</p>

<p>XellOs</p>

<p>15:17:18</p>

<p>我在很安静的小黑屋啊</p>

<p>XellOs</p>

<p>15:17:48</p>

<p>是的</p>

<p>XellOs</p>

<p>15:17:51</p>

<p>传下</p>

<p>XellOs</p>

<p>15:17:52</p>

<p>喘息啊</p>

<p>XellOs</p>

<p>15:17:57</p>

<p><img src="http://everet.org/wp-content/uploads/2012/01/4U8MOI7DP52Q92TC_thumb.gif" alt="4U8MOI7DQ92TC" /></p>

<p>XellOs</p>

<p>15:18:13</p>

<p>那个是用texture来存储的</p>

<p>XellOs</p>

<p>15:18:23</p>

<p>用texture导入给gpu算的</p>

<p>XellOs</p>

<p>15:18:30</p>

<p>粒子的信息</p>

<p>XellOs</p>

<p>15:18:48</p>

<p>你可以参见directx sdk里面的Nbody</p>

<p>XellOs</p>

<p>15:19:03</p>

<p>第一次导入，之后是gpu自己算的</p>

<p>XellOs</p>

<p>15:19:12</p>

<p>粒子系统运算两种</p>

<p>XellOs</p>

<p>15:19:26</p>

<p>一种是初始+变量，一种是实时变的</p>

<p>XellOs</p>

<p>15:19:47</p>

<p>我们这种肯定是实时的啊，也就是需要存储每一次的信息的</p>

<p>XellOs</p>

<p>15:19:55</p>

<p><img src="http://everet.org/wp-content/uploads/2012/01/NFYZI7A9P9HQA0BKSI_thumb.jpg" alt="I" /></p>

<p>XellOs</p>

<p>15:20:01</p>

<p>好的</p>

<p>XellOs</p>

<p>15:20:04</p>

<p>好纠结</p>

<p>屠文翔</p>

<p>15:20:03</p>

<p><img src="http://everet.org/wp-content/uploads/2012/01/XN9XY3P2OIAVBS4IKR8MW_thumb.jpg" alt="X" /></p>

<p>XellOs</p>

<p>15:20:25</p>

<p>恩，就是啊。。</p>

<p>XellOs</p>

<p>15:20:30</p>

<p>想想先。。</p>

<p>XellOs</p>

<p>15:20:49</p>

<p>可以先列个list</p>

<p>XellOs</p>

<p>15:20:59</p>

<p>就是对高层的需求</p>

<p>XellOs</p>

<p>15:21:07</p>

<p>然后再往下考虑</p>

<p>XellOs</p>

<p>15:21:12</p>

<p>就是说高层需要做到什么</p>

<p>屠文翔</p>

<p>15:21:26</p>

<p>点 边 面</p>

<p>屠文翔</p>

<p>15:21:39</p>

<p>鼠标选取</p>

<p>屠文翔</p>

<p>15:21:45</p>

<p>高亮</p>

<p>屠文翔</p>

<p>15:21:52</p>

<p>边  长度 信息</p>

<p>XellOs</p>

<p>15:22:18</p>

<p>第二个是存储量</p>

<p>XellOs</p>

<p>15:22:24</p>

<p>大慨有多大</p>

<p>XellOs</p>

<p>15:22:29</p>

<p>需不需要用的平衡树</p>

<p>XellOs</p>

<p>15:22:39</p>

<p>我压根就没说话啊</p>

<p>XellOs</p>

<p>15:22:41</p>

<ul>
  <li>-#</li>
</ul>

<p>XellOs</p>

<p>15:22:48</p>

<p>我micro都是关了的啊</p>

<p>XellOs</p>

<p>15:22:52</p>

<p><a href="http://everet.org/wp-content/uploads/2012/01/PGPK8I8YZER5ED.jpg"><img src="http://everet.org/wp-content/uploads/2012/01/PGPK8I8YZER5ED_thumb.jpg" alt="PGPK8}I(@%8YZ}E``$R5E)D" /></a></p>

<p>XellOs</p>

<p>15:23:13</p>

<p>就是你要考虑检索速度的啊</p>

<p>XellOs</p>

<p>15:24:03</p>

<p>恩，那上层你准备先用什么存呢？</p>

<p>XellOs</p>

<p>15:24:26</p>

<p>一个点一个对象？</p>

<p>XellOs</p>

<p>15:24:34</p>

<p>不太好</p>

<p>XellOs</p>

<p>15:24:36</p>

<p>这样觉得</p>

<p>XellOs</p>

<p>15:25:02</p>

<p>又不太好- -#</p>

<p>XellOs</p>

<p>15:25:04</p>

<p>再考虑下</p>

<p>XellOs</p>

<p>15:25:27</p>

<p>我是觉得用面好点</p>

<p>XellOs</p>

<p>15:25:38</p>

<p>恩</p>

<p>XellOs</p>

<p>15:25:48</p>

<p>这样给下层运算好些</p>

<p>XellOs</p>

<p>15:25:55</p>

<p>但是给下层渲染要好点</p>

<p>XellOs</p>

<p>15:26:59</p>

<p>你想想你点检索之后不是每三个点就需要渲染个面</p>

<p>XellOs</p>

<p>15:27:05</p>

<p>你要做cull</p>

<p>XellOs</p>

<p>15:27:33</p>

<p>是啊</p>

<p>XellOs</p>

<p>15:27:36</p>

<p>我就是说这样</p>

<p>XellOs</p>

<p>15:27:59</p>

<p>[<img src="http://everet.org/wp-content/uploads/2012/01/ZAYODTWYLA4AMAJ6.gif" alt="ZAYOD())T$)W(YLA4AMA[J6](http://everet.org/wp-content/uploads/2012/01/ZAYODTWYLA4AMAJ6_thumb.gif)" /></p>

<p>有点乱</p>

<p>XellOs</p>

<p>15:28:01</p>

<p>缕一缕</p>

<p>XellOs</p>

<p>15:28:49</p>

<p>比如： 一张白纸，你的逻辑点是4个，折一次之后逻辑点是几个？</p>

<p>XellOs</p>

<p>15:29:35</p>

<p>恩，对角折之后你4个点就需要存索引了</p>

<p>XellOs</p>

<p>15:29:50</p>

<p>如果不存索引你是不知道渲染哪几个面的了</p>

<p>XellOs</p>

<p>15:29:59</p>

<p>我用画图板画个图</p>

<p>XellOs</p>

<p>15:31:07</p>

<p><a href="http://everet.org/wp-content/uploads/2012/01/59RGBZRY5I1O0XPL9Z9_thumb.jpg">![59%RG}BZRY5I1O]0X%PL9Z9</a>](http://everet.org/wp-content/uploads/2012/01/59RGBZRY5I1O0XPL9Z9.jpg)</p>

<p>XellOs</p>

<p>15:31:34</p>

<p>如果你右边木有索引是木有办法画的</p>

<p>XellOs</p>

<p>15:31:50</p>

<p>怎么画呢？</p>

<p>XellOs</p>

<p>15:31:55</p>

<p>是啊</p>

<p>XellOs</p>

<p>15:32:03</p>

<p>存六个顶点你还是默认有索引了</p>

<p>XellOs</p>

<p>15:32:05</p>

<p>就是123456</p>

<p>XellOs</p>

<p>15:32:25</p>

<p>恩，这样也是可以的！</p>

<p>XellOs</p>

<p>15:32:36</p>

<p>那其实也就是存面了</p>

<p>XellOs</p>

<p>15:32:44</p>

<p>所以，回归了</p>

<p>XellOs</p>

<p>15:32:46</p>

<p>还是存面啊</p>

<p>XellOs</p>

<p>15:32:50</p>

<p>[![]~)Z$_L$~U]R%UQM{Q~_X)B](http://everet.org/wp-content/uploads/2012/01/Z_LURUQMQ_XB_thumb.gif)](http://everet.org/wp-content/uploads/2012/01/Z_LURUQMQ_XB.gif)</p>

<p>XellOs</p>

<p>15:33:27</p>

<p>我是觉得用树来存面就好了</p>

<p>XellOs</p>

<p>15:33:38</p>

<p>最上层的话</p>

<p>XellOs</p>

<p>15:33:42</p>

<p>逻辑面</p>

<p>XellOs</p>

<p>15:34:23</p>

<p>你逻辑面的三个点可以确定的啊</p>

<p>XellOs</p>

<p>15:34:40</p>

<p>是啊</p>

<p>XellOs</p>

<p>15:34:47</p>

<p>那个可以算出来的嘛</p>

<p>XellOs</p>

<p>15:34:57</p>

<p>直接算法就可以算的</p>

<p>XellOs</p>

<p>15:35:07</p>

<p>就是图上的123啊</p>

<p>XellOs</p>

<p>15:35:23</p>

<p>你还是用三角存啊</p>

<p>XellOs</p>

<p>15:35:31</p>

<p>两个就行了啊，刚才他说的</p>

<p>XellOs</p>

<p>15:35:56</p>

<p>做判断了哦</p>

<p>XellOs</p>

<p>15:36:01</p>

<p>算法来做了哦</p>

<p>XellOs</p>

<p>15:37:59</p>

<p>恩，这个数据结构我觉得再考虑下</p>

<p>XellOs</p>

<p>15:38:05</p>

<p>反正基本原理应该是那样的</p>

<p>XellOs</p>

<p>15:38:19</p>

<p>还是这个啊</p>

<p>XellOs</p>

<p>15:38:30</p>

<p>就是要考虑树的调整</p>

<p>XellOs</p>

<p>15:38:35</p>

<p>对</p>

<p>XellOs</p>

<p>15:38:38</p>

<p>就是节点的问题</p>

<p>XellOs</p>

<p>15:39:12</p>

<p>这个树不一定平衡吧</p>

<p>XellOs</p>

<p>15:39:26</p>

<p>恩，差不多</p>

<p>XellOs</p>

<p>15:39:39</p>

<p>不考虑一百个</p>

<p>XellOs</p>

<p>15:39:42</p>

<p>只考虑4个</p>

<p>XellOs</p>

<p>15:39:48</p>

<p>只考虑4个</p>

<p>XellOs</p>

<p>15:39:56</p>

<p>那一百个下去算</p>

<p>XellOs</p>

<p>15:40:08</p>

<p>2个三角形</p>

<p>XellOs</p>

<p>15:40:13</p>

<p>6个点</p>

<p>XellOs</p>

<p>15:40:19</p>

<p>两个树节点</p>

<p>XellOs</p>

<p>15:40:40</p>

<p>不的</p>

<p>XellOs</p>

<p>15:40:47</p>

<p>只有叶子表示面</p>

<p>XellOs</p>

<p>15:40:57</p>

<p>根不表示面的啊</p>

<p>XellOs</p>

<p>15:41:03</p>

<p>看来要用画图板了</p>

<p>XellOs</p>

<p>15:41:06</p>

<p>[![UARF0O4MI<em>$6HXMIHAA]{98[10]](http://everet.org/wp-content/uploads/2012/01/UARF0O4MI</em>6HXMIHAA9810<em>thumb.jpg)](http://everet.org/wp-content/uploads/2012/01/UARF0O4MI</em>6HXMIHAA9810.jpg)</p>

<p>某花</p>

<p>15:41:27</p>

<p><a href="http://everet.org/wp-content/uploads/2012/01/FZL83KE0M_OR457U3JDT.jpg"><img src="http://everet.org/wp-content/uploads/2012/01/FZL83KE0M_OR457U3JDT_thumb.jpg" alt="FZ)L83KE~0M_OR457U3J}DT" /></a></p>

<p>某花</p>

<p>15:42:27</p>

<p>[<img src="http://everet.org/wp-content/uploads/2012/01/KZPJGW_UB1AL4S_WWZR.jpg" alt="KZPJGW_U[B1AL4S_W(%$WZR](http://everet.org/wp-content/uploads/2012/01/KZPJGW_UB1AL4S_WWZR_thumb.jpg)" /></p>

<p>XellOs</p>

<p>15:42:27</p>

<p>[![K`DXBW<a href="http://everet.org/wp-content/uploads/2012/01/KDXBWDPLFSVDDWKD24M.jpg">DPLF~SVDDWKD2[4M](http://everet.org/wp-content/uploads/2012/01/KDXBWDPLFSVDDWKD24M_thumb.jpg)</a></p>

<p>XellOs</p>

<p>15:42:48</p>

<p>1和2写反了，不过不太影响</p>

<p>XellOs</p>

<p>15:42:54</p>

<p>只有叶子是面</p>

<p>XellOs</p>

<p>15:43:10</p>

<p>然后叶子中的三个点再交给下层去算图形学的顶点</p>

<p>XellOs</p>

<p>15:43:32</p>

<p>你定不了i</p>

<p>XellOs</p>

<p>15:43:33</p>

<p>太多了</p>

<p>XellOs</p>

<p>15:44:18</p>

<p>恩，我的意思是这样的</p>

<p>XellOs</p>

<p>15:44:29</p>

<p>那个你人不能算的啊</p>

<p>XellOs</p>

<p>15:44:30</p>

<p>茫茫多</p>

<p>某花</p>

<p>15:44:44</p>

<p>[<img src="http://everet.org/wp-content/uploads/2012/01/KZPJGW_UB1AL4S_WWZR6.jpg" alt="KZPJGW_U[B1AL4S_W(%$WZR[6]](http://everet.org/wp-content/uploads/2012/01/KZPJGW_UB1AL4S_WWZR6_thumb.jpg)" /></p>

<p>XellOs</p>

<p>15:44:55</p>

<p>左边字是什么</p>

<p>XellOs</p>

<p>15:45:44</p>

<p>你的非叶子节点就是逻辑的面啊</p>

<p>XellOs</p>

<p>15:45:55</p>

<p>你的叶子就是逻辑的三角啊</p>

<p>XellOs</p>

<p>15:46:22</p>

<p>恩，是的</p>

<p>XellOs</p>

<p>15:46:25</p>

<p>但是不会很多啊</p>

<p>XellOs</p>

<p>15:46:44</p>

<p>你这个面有点难加</p>

<p>XellOs</p>

<p>15:46:47</p>

<p>应该要删点</p>

<p>XellOs</p>

<p>15:46:50</p>

<p>然后加点</p>

<p>XellOs</p>

<p>15:47:06</p>

<p>我是这样觉得的</p>

<p>某花</p>

<p>15:47:48</p>

<p><a href="http://everet.org/wp-content/uploads/2012/01/R2NRXZ9FWN_F2ME1L_thumb.jpg">![R2NR%XZ~9$}F{]WN_F2ME1L</a>](http://everet.org/wp-content/uploads/2012/01/R2NRXZ9FWN_F2ME1L.jpg)</p>

<p>XellOs</p>

<p>15:48:45</p>

<p><a href="http://everet.org/wp-content/uploads/2012/01/N_VMYY4JDF1XZPKJ9JG.jpg"><img src="http://everet.org/wp-content/uploads/2012/01/N_VMYY4JDF1XZPKJ9JG_thumb.jpg" alt="N)_VMYY4JDF$1X{ZP}KJ9JG" /></a></p>

<p>XellOs</p>

<p>15:49:00</p>

<p>因为你画图只会去找叶子，所以应该也快</p>

<p>XellOs</p>

<p>15:49:09</p>

<p>只是存储量可能比较大</p>

<p>XellOs</p>

<p>15:49:16</p>

<p>估计算是个空间换时间吧</p>

<p>XellOs</p>

<p>15:50:01</p>

<p>[![UARF0O4MI<em>$6HXMIHAA]{98[12]](http://everet.org/wp-content/uploads/2012/01/UARF0O4MI</em>6HXMIHAA9812<em>thumb.jpg)](http://everet.org/wp-content/uploads/2012/01/UARF0O4MI</em>6HXMIHAA9812.jpg)</p>

<p>XellOs</p>

<p>15:50:55</p>

<p>你那个我是觉得他不再是二叉树了</p>

<p>XellOs</p>

<p>15:51:07</p>

<p>什么不用加点？</p>

<p>屠文翔</p>

<p>15:51:30</p>

<p>[<img src="http://everet.org/wp-content/uploads/2012/01/1J9XTZGH17W5KAGK43WN.jpg" alt="1J9XT(ZGH17W5K[AGK~43WN](http://everet.org/wp-content/uploads/2012/01/1J9XTZGH17W5KAGK43WN_thumb.jpg)" /></p>

<p>XellOs</p>

<p>15:51:45</p>

<p>是啊</p>

<p>XellOs</p>

<p>15:51:46</p>

<p>好专业啊</p>

<p>XellOs</p>

<p>15:51:51</p>

<p><a href="http://everet.org/wp-content/uploads/2012/01/NFYZI7A9P9HQA0BKSI4.jpg"><img src="http://everet.org/wp-content/uploads/2012/01/NFYZI7A9P9HQA0BKSI4_thumb.jpg" alt="{~NF`YZ@I7A9P9HQA0BK$SI[4]" /></a></p>

<p>屠文翔</p>

<p>15:52:25</p>

<p><a href="http://everet.org/wp-content/uploads/2012/01/UINX6N1WU76__BR0C.jpg"><img src="http://everet.org/wp-content/uploads/2012/01/UINX6N1WU76__BR0C_thumb.jpg" alt="UINX@6N1W{U76__}$`B%R0C" /></a></p>

<p>XellOs</p>

<p>15:52:58</p>

<p>首先是确定是最1的所有节点都有影响</p>

<p>XellOs</p>

<p>15:53:07</p>

<p>然后修正他的所有子节点</p>

<p>XellOs</p>

<p>15:53:15</p>

<p>所以3和4就必须分开</p>

<p>XellOs</p>

<p>15:53:33</p>

<p>恩，是的</p>

<p>XellOs</p>

<p>15:53:40</p>

<p>就是这个意思，加在3和4下面</p>

<p>XellOs</p>

<p>15:53:55</p>

<p>但是你会发现一个非三角的节点</p>

<p>XellOs</p>

<p>15:54:05</p>

<p>所以要单独处理，要进行费列</p>

<p>XellOs</p>

<p>15:54:07</p>

<p>分裂</p>

<p>XellOs</p>

<p>15:54:42</p>

<p>没有没有</p>

<p>XellOs</p>

<p>15:54:47</p>

<p>我的意思是叶子是三角</p>

<p>XellOs</p>

<p>15:54:54</p>

<p>其他是逻辑面</p>

<p>XellOs</p>

<p>15:55:30</p>

<p>画图困难啊</p>

<p>屠文翔</p>

<p>15:55:54</p>

<p><a href="http://everet.org/wp-content/uploads/2012/01/ZJET59XL0K4EA0DELFKNB.jpg"><img src="http://everet.org/wp-content/uploads/2012/01/ZJET59XL0K4EA0DELFKNB_thumb.jpg" alt="ZJET59XL~0K4E$A0DELFKNB" /></a></p>

<p>XellOs</p>

<p>15:56:05</p>

<p>差不多，很乱啊！</p>

<p>XellOs</p>

<p>15:56:17</p>

<p>要不再想想，这样树肯定比较大</p>

<p>XellOs</p>

<p>15:57:19</p>

<p><a href="http://everet.org/wp-content/uploads/2012/01/4U8MOI7DP52Q92TC4.gif"><img src="http://everet.org/wp-content/uploads/2012/01/4U8MOI7DP52Q92TC4_thumb.gif" alt="}4U8}`MOI7D)}P5`2$Q92TC[4]" /></a></p>

<p>XellOs</p>

<p>15:57:45</p>

<p>也行！</p>

<p>XellOs</p>

<p>15:58:00</p>

<p>然后下面再算是吧</p>

<p>XellOs</p>

<p>15:58:07</p>

<p>也行！</p>

<p>XellOs</p>

<p>15:58:24</p>

<p>对啊</p>

<p>XellOs</p>

<p>15:58:25</p>

<p>面啊</p>

<p>XellOs</p>

<p>15:59:06</p>

<p>感觉回退比较方便</p>

<p>XellOs</p>

<p>15:59:46</p>

<p>让它重复</p>

<p>XellOs</p>

<p>15:59:49</p>

<p>不要做索引</p>

<p>XellOs</p>

<p>15:59:52</p>

<p>太麻烦了</p>

<p>XellOs</p>

<p>16:00:15</p>

<p>恩，链表就好了</p>

<p>XellOs</p>

<p>16:00:18</p>

<p>反正不多</p>

<p>XellOs</p>

<p>16:00:44</p>

<p>先找面</p>

<p>XellOs</p>

<p>16:01:10</p>

<p>恩</p>

<p>XellOs</p>

<p>16:01:17</p>

<p>那个貌似要自己弄</p>

<p>XellOs</p>

<p>16:01:39</p>

<p>那个要查下</p>

<p>XellOs</p>

<p>16:01:45</p>

<p>拾取我也不太会</p>

<p>XellOs</p>

<p>16:02:06</p>

<p>八叉树插件？</p>

<p>某花</p>

<p>16:02:37</p>

<p>.ogre有没什么八叉树插件…</p>

<p>XellOs</p>

<p>16:02:43</p>

<p>不知道啊</p>

<p>XellOs</p>

<p>16:03:00</p>

<p>拾取算法应该比较多</p>

<p>XellOs</p>

<p>16:03:06</p>

<p>我回去查下书</p>

<p>XellOs</p>

<p>16:03:26</p>

<p>上层的方法要确定</p>

<p>XellOs</p>

<p>16:03:30</p>

<p>这个你还木有定哦</p>

<p>XellOs</p>

<p>16:03:48</p>

<p>就是逻辑操作什么的</p>

<p>屠文翔</p>

<p>16:04:04</p>

<p>拆面</p>

<p>屠文翔</p>

<p>16:04:07</p>

<p>拆分</p>

<p>XellOs</p>

<p>16:04:30</p>

<p>那些后来考虑吧</p>

<p>XellOs</p>

<p>16:04:33</p>

<p>先折吧</p>

<p>XellOs</p>

<p>16:04:38</p>

<p>不考虑拖先</p>

<p>XellOs</p>

<p>16:05:15</p>

<p>上层到下层就是用你数据结构中的顶点去算图元</p>

<p>XellOs</p>

<p>16:05:30</p>

<p>然后一起丢给gpu，让它画就可以了</p>

<p>XellOs</p>

<p>16:05:40</p>

<p>传个GPU的方法估计要用texture</p>

<p>XellOs</p>

<p>16:05:48</p>

<p>传给</p>

<p>XellOs</p>

<p>16:05:54</p>

<p>恩，然后给gpu</p>

<p>XellOs</p>

<p>16:06:02</p>

<p>但是这样没有用上gpu的运算能力</p>

<p>XellOs</p>

<p>16:06:07</p>

<p>恩，是的啊</p>

<p>XellOs</p>

<p>16:06:40</p>

<p>gpu和内存之间的数据交换方式有比较多种的</p>

<p>XellOs</p>

<p>16:06:51</p>

<p>用纹理传是一种</p>

<p>XellOs</p>

<p>16:06:58</p>

<p>恩，是的</p>

<p>XellOs</p>

<p>16:07:11</p>

<p>恩</p>

<p>XellOs</p>

<p>16:07:17</p>

<p>是的，是这个意思。</p>

<p>XellOs</p>

<p>16:07:56</p>

<p>有的，你可以参考下游戏编程那本书</p>

<p>XellOs</p>

<p>16:08:00</p>

<p>好像是第二本</p>

<p>XellOs</p>

<p>16:08:04</p>

<p>有个texture的管理器</p>

<p>XellOs</p>

<p>16:08:17</p>

<p><img src="{E251FA83-4A93-42d3-9621-0704EA27D0D6}.dat" alt="" />书在实验室，我忘记了</p>

<p>XellOs</p>

<p>16:08:33</p>

<p>是的，不过旭瑜快回去了</p>

<p>XellOs</p>

<p>16:08:36</p>

<p>他知道在哪</p>

<p>XellOs</p>

<p>16:08:51</p>

<p>那他去拿一下就好了</p>

<p>XellOs</p>

<p>16:08:53</p>

<p>他有钥匙</p>

<p>杨旭瑜</p>

<p>16:09:14</p>

<p><strong>我已经在实验室了的说。。。</strong></p>

<p>XellOs</p>

<p>16:09:20</p>

<p>用cpu算过</p>

<p>XellOs</p>

<p>16:09:24</p>

<p>木有用gpu算过</p>

<p>XellOs</p>

<p>16:09:34</p>

<p>恩</p>

<p>屠文翔</p>

<p>16:09:59</p>

<p>杨旭瑜没在语音上吧。。</p>

<p>杨旭瑜</p>

<p>16:10:10</p>

<p><strong>没有啊。</strong></p>

<p>某花</p>

<p>16:10:32</p>

<p>旭瑜，你装完了吗…</p>

<p>16:11:03</p>

<p><img src="{7BF02F00-AB0E-4037-8DC1-3A915B181375}.dat" alt="" />16:11:03
XellOs(636202)中止了语音通话。</p>

<p>16:11:04</p>

<p><img src="{7BF02F00-AB0E-4037-8DC1-3A915B181375}.dat" alt="" />16:11:04
主持人屠文翔(963262214)中止了语音通话，通话时长1小时2分18秒。</p>

<p>杨旭瑜</p>

<p>16:11:20</p>

<p><strong>我不清楚如何把git.everet.org的东西弄下来。</strong></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Clover进度]]></title>
    <link href="http://everet.org/2012/01/clover-progress.html"/>
    <updated>2012-01-28T01:31:58+08:00</updated>
    <id>http://everet.org/2012/01/clover-progress</id>
    <content type="html"><![CDATA[Liquid error: undefined method `strip!' for nil:NilClass]]></content>
  </entry>
  
</feed>
