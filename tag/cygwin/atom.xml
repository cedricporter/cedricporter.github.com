<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: cygwin | EverET.org]]></title>
  <link href="http://everet.org/tag/cygwin/atom.xml" rel="self"/>
  <link href="http://everet.org/"/>
  <updated>2012-12-25T22:01:32+08:00</updated>
  <id>http://everet.org/</id>
  <author>
    <name><![CDATA[Stupid ET]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[管理远程主机的一些技巧分享]]></title>
    <link href="http://everet.org/2012/01/management-remote-host.html"/>
    <updated>2012-01-20T21:11:18+08:00</updated>
    <id>http://everet.org/2012/01/management-remote-host</id>
    <content type="html"><![CDATA[<p>对于管理远程主机，我想大家都一般使用ssh吧，在本地是Linux的环境下，那么都是挺方便的，什么都不需要弄就可以用</p>

<p>ssh -l username hostname</p>

<p>来登录远程主机。而在Windows上，虽然有专门的ssh客户端，不过在cygwin里面还是挺亲切的。对于cygwin，我们可以设置在安装的时候选上OpenSSH，这样就可以方便地在Windows上使用ssh了，当然还有很多非常棒的工具可以选择安装，在国内选择163的镜像速度还是挺快的。</p>

<h3>每次登陆都要密码？免口令SSH登陆！</h3>

<p>我们可以创建创建公钥和密钥来实现免口令登陆，公钥放到服务器那里，这样在登陆的时候只要公钥密钥匹配正确就可以不需要输入密码了。</p>

<p>好，现在我们来创建公钥和密钥，我们使用ssh-keygen来生成。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>bash  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="nv">$ </span>ssh-keygen
</span><span class='line'>Generating public/private rsa key pair.
</span><span class='line'>Enter file in which to save the key <span class="o">(</span>/home/Cedric Porter/.ssh/id_rsa<span class="o">)</span>:
</span><span class='line'>Enter passphrase <span class="o">(</span>empty <span class="k">for </span>no passphrase<span class="o">)</span>:
</span><span class='line'>Enter same passphrase again:
</span><span class='line'>Your identification has been saved in id_rsa_test.
</span><span class='line'>Your public key has been saved in id_rsa_test.pub.
</span><span class='line'>The key fingerprint is:
</span><span class='line'>60:7c:f3:42:58:57:42:1f:dc:65:e2:05:3d:49:54:02 Cedric Porter@CedricPorter-PC
</span><span class='line'>The key<span class="err">&#39;</span>s randomart image is:
</span><span class='line'>+--<span class="o">[</span> RSA 2048<span class="o">]</span>----+
</span><span class='line'>|        ..+oEo**B|
</span><span class='line'>|     . o . o.o.B.|
</span><span class='line'>|      <span class="o">=</span> +   . . .|
</span><span class='line'>|     . + o       |
</span><span class='line'>|        S .      |
</span><span class='line'>|         .       |
</span><span class='line'>|                 |
</span><span class='line'>|                 |
</span><span class='line'>|                 |
</span><span class='line'>+-----------------+&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>然后我们就在我们的HOME目录下的.ssh目录下创建了公钥密钥对。<!-- more -->
我们可以看到</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>bash  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Cedric Porter@CedricPorter-PC ~/.ssh
</span><span class='line'><span class="nv">$ </span>ls
</span><span class='line'>id_rsa  id_rsa.pub  known_hosts&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>其中，id_rsa为我们的密钥，id_rsa.pub为我们的公钥，我们把公钥写到服务器那里的.ssh目录下的authorized_keys里面</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>bash  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Cedric Porter@CedricPorter-PC ~/.ssh
</span><span class='line'><span class="nv">$ </span>scp ~/.ssh/id_rsa.pub root@everet.org:~/.ssh/authorized_keys&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>然后以后我们的ssh和scp都不需要再输入密码了。</p>

<h3>每次都要打 ssh -l root everet.org，很烦，使用缩写！</h3>

<p>我们可以使用别名，例如，我们可以把 alias et='ssh -l root everet.org' 写入到HOME目录下的.bashrc中，利用别名完成。也可以把登录命令写到一个在环境变量的路径中的一个文件中，例如写到/usr/bin下。</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>bash  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;alias et=&#39;ssh -l root everet.org&#39;&quot;</span> &gt;&gt; ~/.bashrc
</span><span class='line'><span class="nv">$ </span><span class="c"># 或者用下面的命令</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;ssh -l root everet.org&quot;</span> &gt; /usr/bin/et
</span><span class='line'><span class="nv">$ </span>chmod +x /usr/bin/et
</span><span class='line'><span class="err">$</span>
</span><span class='line'><span class="nv">$ </span><span class="c"># 以后就可以使用et来登录了</span>
</span><span class='line'>Cedric Porter@CedricPorter-PC ~
</span><span class='line'><span class="nv">$ </span>et
</span><span class='line'>Linux localhost.localdomain 2.6.33.4-95.fc13.i686.PAE <span class="c">#1 SMP Thu May 13 05:38:26 UTC 2010 i686 GNU/Linux</span>
</span><span class='line'>Ubuntu 10.10&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Welcome to Ubuntu!
</span><span class='line'> * Documentation:  https://help.ubuntu.com/
</span><span class='line'>Last login: Fri Jan 20 10:55:50 2012 from 123.65.146.220
</span><span class='line'>root@localhost:~#&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h3>断线，丢失之前的工作！？用screen解决ssh的断线重连问题</h3>

<h1>screen -ls</h1>

<p>可以查看现在有的screen，如果找不到命令可以使用apt-get install screen，更详细的说明请见IBM网站的教程</p>

<p><a href="http://www.ibm.com/developerworks/cn/linux/l-cn-screen/">http://www.ibm.com/developerworks/cn/linux/l-cn-screen/</a></p>

<p>一般我们登录后，我们可以使用 screen -S et 来新建一个screen，于是当我们断线后，我们可以重新连接使用 screen -r et 恢复之前的会话。这个很好，当我们需要断开连接去睡觉时，可以让工作继续。所以必要时我们应该使用screen来管理我们的会话。</p>

<h3>与服务器同步数据</h3>

<p>对于同步数据，发现rsync还是相当不错滴。rsync是由Andrew Trigdell和Paul Macherras编写的，其思想与rdist类似，不过侧重点不同。rsync有点儿像加强版的rcp，同步时可以保存权限等信息，还可以增量复制。</p>

<h4>下面我们来讨论下在Ubuntu下开启rsync。</h4>

<ol>
<li><p>我们修改/etc/default/rsync，让它可以在开机自启动。我们将其中的RSYNC_ENABLE=false改为RSYNC_ENABLE=true即可。</p></li>
<li><p>设置rsync。配置文件在/etc/rsyncd.conf，如果不存着则创建一个，如创建一个配置文件，vi /etc/rsyncd.conf 。</p></li>
<li><p>输入下面内容</p></li>
</ol>


<blockquote><p>[et_wordpress]
path = /var/www/et
secrets file = /etc/rsyncd.secrets
read only = false
uid = root
gid = root</p></blockquote>

<p>打完收工！现在重启开启rsync的daemon，输入 /etc/init.d/rsync start 。OK！</p>

<h4>现在让我们来在同步数据。</h4>

<p>把服务器的数据下载回来，我现在在Windows上，使用cygwin，例如，我把的我的wordpress的文件同步回来，可以使用下述命令：</p>

<blockquote><p>rsync -vzrtopg --delete --progress   everet.org::et_wordpress   /cygdrive/h/Coding/everet/et</p></blockquote>

<p>当我在本地修改了文件，我可以把我的文件push到服务器上面：</p>

<blockquote><p>rsync -vzrtopg --delete --progress  /cygdrive/h/Coding/everet/et/*   everet.org::et_wordpress</p></blockquote>

<p>每次都输入那么一长串命令很麻烦吧？我们可以参看上面的第二个标题的使用缩写命令来完成。</p>

<blockquote><p>echo "rsync -vzrtopg --delete --progress   everet.org::et_wordpress   /cygdrive/h/Coding/everet/et" > /usr/bin/rcet
echo "rsync -vzrtopg --delete --progress /cygdrive/h/Coding/everet/et/* everet.org::et_wordpress" > /usr/bin/rcet2</p></blockquote>

<p>然后我们就可以使用 rcet 来下载服务器的数据，用 rcet2 来把本地的数据推送到服务器。</p>

<p>对于我在cygwin下，每次推送到服务器是文件的属主会发生变化，所以我们在推送完后还需要修改属主，这个在cygwin会出现，不知在纯Linux下会不会，不过应该不会滴。如果出现文件属主改变的问题我们可以在推送完后修改下文件属主。</p>

<blockquote><p>ssh -l root everet.org "chown www-data:www-data -R /var/www/et"</p></blockquote>

<h4>好，我们把它加到我们的推送数据的别名缩写中。修改 /usr/bin/rcet2 文件内容为：</h4>

<blockquote><p>rsync -vzrtopg --delete --progress /cygdrive/h/Coding/everet/et/* everet.org::et_wordpress
ssh -l root everet.org "chown www-data:www-data -R /var/www/et"
echo "Done."</p></blockquote>

<p>我们就可以方便地推送数据了。</p>
]]></content>
  </entry>
  
</feed>
